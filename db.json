{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/3-hexo/source/css/gitalk.css","path":"css/gitalk.css","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/mobile.styl","path":"css/mobile.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/alipay.jpg","path":"img/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/article-list-background.jpeg","path":"img/article-list-background.jpeg","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/avatar.jpg","path":"img/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/gov.png","path":"img/gov.png","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/school-book.png","path":"img/school-book.png","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/weixin.jpg","path":"img/weixin.jpg","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/brown-papersq.png","path":"img/brown-papersq.png","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/gitment.js","path":"js/gitment.js","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/gitalk.js","path":"js/gitalk.js","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/jquery.pjax.js","path":"js/jquery.pjax.js","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/iconfont.js","path":"js/iconfont.js","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/titleTip.js","path":"js/titleTip.js","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.eot","path":"css/fonts/icomoon.eot","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.svg","path":"css/fonts/icomoon.svg","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.ttf","path":"css/fonts/icomoon.ttf","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.woff","path":"css/fonts/icomoon.woff","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.eot","path":"css/fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.svg","path":"css/fonts/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.ttf","path":"css/fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.woff","path":"css/fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.woff2","path":"css/fonts/iconfont.woff2","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/selection.json","path":"css/fonts/selection.json","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/atom-dark.styl","path":"css/hl_theme/atom-dark.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/atom-light.styl","path":"css/hl_theme/atom-light.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/brown-paper.styl","path":"css/hl_theme/brown-paper.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/darcula.styl","path":"css/hl_theme/darcula.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/github-gist.styl","path":"css/hl_theme/github-gist.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/github.styl","path":"css/hl_theme/github.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-dark.styl","path":"css/hl_theme/gruvbox-dark.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-light.styl","path":"css/hl_theme/gruvbox-light.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-dark.styl","path":"css/hl_theme/kimbie-dark.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-light.styl","path":"css/hl_theme/kimbie-light.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/railscasts.styl","path":"css/hl_theme/railscasts.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/rainbow.styl","path":"css/hl_theme/rainbow.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/school-book.styl","path":"css/hl_theme/school-book.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/sublime.styl","path":"css/hl_theme/sublime.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/sunburst.styl","path":"css/hl_theme/sunburst.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/zenbum.styl","path":"css/hl_theme/zenbum.styl","modified":1,"renderable":1}],"Cache":[{"_id":"source/about/index.md","hash":"89d9ae4924cab63c0cc7bd773b5f073b89a0b416","modified":1684922131315},{"_id":"source/.DS_Store","hash":"b6fd3b2ae8ba1b27ab4399f67fc7ecf6677634c3","modified":1685382640801},{"_id":"source/_posts/C语言/C-C Primer Plus 示例程序.md","hash":"2912bf07aede24e3b10c0ec2560b026ce607316e","modified":1685381604098},{"_id":"source/_posts/C语言/C-C示例程序及解释.md","hash":"d2fa65801f010e48a664fe3a330929145f914b36","modified":1685381433777},{"_id":"source/_posts/Git/Git-一份代码同时提交两个仓库.md","hash":"43ce5e2b64e81051b00dc81e799f3255ebb36d7c","modified":1684986894233},{"_id":"source/_posts/.DS_Store","hash":"40467bf47bbb89c9d5333e0944ebd9c0e30c2d8f","modified":1685382640799},{"_id":"source/CNAME","hash":"fa9d6db13bb07dea025fba81f94418914c924e06","modified":1684920023066},{"_id":"source/_posts/C语言/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1685109892977},{"_id":"source/_posts/Hexo/Hexo-分类管理md文件.md","hash":"d4662efaffe35f0698a9dbc37a22411301967ea1","modified":1684986883016},{"_id":"source/_posts/Hexo/Hexo-添加看板娘.md","hash":"c01ddbdab9a12519e6fd531936ca8ceadbb9ed58","modified":1685025935102},{"_id":"source/_posts/Hexo/Hexo-数据备份.md","hash":"e9b06b777710f033bb57fa035dc420f36d0f4905","modified":1685381512766},{"_id":"source/_posts/Hexo/七牛云备份.md","hash":"49dc0ed7787c48933a41c455d9b7b8ebde3eb648","modified":1685381563920},{"_id":"source/_posts/Jenkins/Jenkins-Gitlab构建配置.md","hash":"9c3328dc7b9ad7db56f4e1ffa90aedd70d772f5d","modified":1685031491996},{"_id":"source/_posts/Gitlab/Gitlab-重置管理员密码.md","hash":"3bc40aaf645cf85522561d45c1f3d52e15bbd03f","modified":1684989636002},{"_id":"source/_posts/Jenkins/Jenkins-远程构建配置.md","hash":"8a586f0aaaa8651e4bd7300c52716e8ece7ae56b","modified":1684986766841},{"_id":"source/_posts/Jenkins/Jenkins-重置管理员密码.md","hash":"d610ae0872abeb83b1283c5d6fb6005ab8b0d01f","modified":1684989401180},{"_id":"source/_posts/Linux/Ubuntu-换源.md","hash":"afd1f27abd57680699d9e47346e4743bc2526536","modified":1685382444478},{"_id":"source/_posts/Linux/Ubuntu-离线安装包.md","hash":"0e4534dfe163231d3a353332e7e3a9ef72348255","modified":1685383045198},{"_id":"source/_posts/Jenkins/Jenkins-模版.md","hash":"1e9b34c4247eed24638f3336adc3d9c59d25f024","modified":1685077174031},{"_id":"source/_posts/Linux/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1685381810937},{"_id":"source/_posts/VSCode/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1685109892977},{"_id":"source/_posts/思考/散落的知识如何归化.md","hash":"313b2e8d36d9755f3bd622e77b704aee1bb49ee5","modified":1685002377679},{"_id":"source/_posts/VSCode/VSCode-设置.md","hash":"260374e0cb9731f8961400200b203b3458794189","modified":1685199377547},{"_id":"themes/3-hexo/LICENSE","hash":"b04140c5f682db2b300428f97bb164fd7f5f18bd","modified":1684921311586},{"_id":"themes/3-hexo/README.md","hash":"d2c42534ceabcb7cd2e58ed994bf7d6f734d1f3b","modified":1684921311587},{"_id":"themes/3-hexo/.gitignore","hash":"86a50fa08e69cab561892aa5edef24f9081bbde1","modified":1684921311586},{"_id":"themes/3-hexo/languages/en.yml","hash":"53ae29ae1237fc7822df85a6d2f8da6f0078625e","modified":1684921311587},{"_id":"themes/3-hexo/layout/indexs.md","hash":"1f88aee6f852f48a25d802e7703b32da7ab0fa60","modified":1684921600481},{"_id":"themes/3-hexo/.DS_Store","hash":"9a2fcc11b41443cbbe6d8eb422fd61a2d1a31d2f","modified":1685334897384},{"_id":"themes/3-hexo/_config.yml","hash":"23792a3bc74920e6889cf885fee43b1ca7e78bd0","modified":1685024260773},{"_id":"themes/3-hexo/layout/index.ejs","hash":"238b3d8eedce3e1a138101917b3238aefb13645a","modified":1685005736323},{"_id":"themes/3-hexo/languages/zh-CN.yml","hash":"d2c6d86fe2ff03e6ee9bbc16dff8efe5b47ac297","modified":1684921311587},{"_id":"themes/3-hexo/.github/ISSUE_TEMPLATE/bug_report.md","hash":"0e662956cbfcaf6c1666e5c30a1fe03461de685e","modified":1684921311586},{"_id":"themes/3-hexo/layout/_partial/article_copyright.ejs","hash":"0ebb17d001cb7bb7606c616c380049a2e7124496","modified":1684921311588},{"_id":"themes/3-hexo/source/.DS_Store","hash":"fdcc907c46e093a14b153c5dc8c038461997ed3c","modified":1685021707962},{"_id":"themes/3-hexo/layout/post.ejs","hash":"41113bd1bc04d656f99631269e7170e38be49cb0","modified":1685005742126},{"_id":"themes/3-hexo/layout/_partial/article.ejs","hash":"516844c4a0e13d6773f6029849f51c59613b6f69","modified":1684921311587},{"_id":"themes/3-hexo/layout/.DS_Store","hash":"35b6aeae5ae0fce06710da659f1d9399994e99ba","modified":1685005226442},{"_id":"themes/3-hexo/layout/_partial/.DS_Store","hash":"7104ae2ce746143fbeb187ecdd36fdc19b4ae503","modified":1684921714748},{"_id":"themes/3-hexo/layout/_partial/comment.ejs","hash":"5507b4dfab2032345e012a0c5356f63b01395157","modified":1684921311588},{"_id":"themes/3-hexo/layout/_partial/footer.ejs","hash":"ed479aa9affee3b02a76da06de45a7c40a97a706","modified":1684921311589},{"_id":"themes/3-hexo/layout/_partial/copyright.ejs","hash":"f66939a8c9d5258948b47842b8b4495e6ec45988","modified":1684921311589},{"_id":"themes/3-hexo/layout/_partial/full-toc.ejs","hash":"a734c26d86da6697003ed27672c1b9b82b216c82","modified":1684921311590},{"_id":"themes/3-hexo/layout/_partial/friends.ejs","hash":"d11092791e5c140ff81f2aefa0d1b051f403239d","modified":1684921311589},{"_id":"themes/3-hexo/layout/_partial/dashang.ejs","hash":"bc94eee27701b67d238f328737b578e8270989eb","modified":1684921311589},{"_id":"themes/3-hexo/layout/_partial/meta.ejs","hash":"8a9e93f9cbe80763264018290da0b14b4bbe8ac5","modified":1684921311590},{"_id":"themes/3-hexo/layout/_partial/nav-right.ejs","hash":"e205f9bb61fd4403d24d863693d4a34ea31b8539","modified":1684921311590},{"_id":"themes/3-hexo/layout/_partial/nav-left.ejs","hash":"0e7de3e614ca49fe1c7420f233bea22e02641272","modified":1684921311590},{"_id":"themes/3-hexo/layout/_partial/mathjax.ejs","hash":"c2e5cef2377884cd79e5f686fe4f74b082744306","modified":1684921311590},{"_id":"themes/3-hexo/layout/_partial/tag.ejs","hash":"3cf8ba0c6112dfa8089603b8df3e31f70a272715","modified":1684921311591},{"_id":"themes/3-hexo/layout/_partial/toc-ref.ejs","hash":"6406251dabda66ef686d4c15edbc3061b6d828b8","modified":1684921311591},{"_id":"themes/3-hexo/source/css/.DS_Store","hash":"f293520b6a825bb6b784df40a9d9d4cfc68cdff9","modified":1684921797698},{"_id":"themes/3-hexo/layout/_partial/header.ejs","hash":"76768204853a8a5e030a96d605a247f9686cf994","modified":1684921311590},{"_id":"themes/3-hexo/source/css/gitalk.css","hash":"58177ce227c50ee359fbf99a4fdd26058887afc5","modified":1684921311595},{"_id":"themes/3-hexo/source/css/style.styl","hash":"7090b81f34e26172670c68da6a366ca186523779","modified":1684921311598},{"_id":"themes/3-hexo/source/img/article-list-background.jpeg","hash":"4fdf8b3e53dd02d6ee6360aebfadb0cba1fb5633","modified":1684921311599},{"_id":"themes/3-hexo/source/img/alipay.jpg","hash":"e457d1d3dfefbbd824d154cf756a2c6d10b812a2","modified":1684921311598},{"_id":"themes/3-hexo/source/css/mobile.styl","hash":"59a4abd36cc8ff2107f1fcb3c0fe48d0492c9030","modified":1684921311598},{"_id":"themes/3-hexo/source/img/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1684921311600},{"_id":"themes/3-hexo/source/img/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1684921311599},{"_id":"themes/3-hexo/source/img/gov.png","hash":"f31c9f47faedf7f33b9580d6284ab891fb697560","modified":1684921311600},{"_id":"themes/3-hexo/source/js/jquery.pjax.js","hash":"191c49fdb40dff115a49cfd2b30dffb888d86550","modified":1684921311607},{"_id":"themes/3-hexo/source/js/iconfont.js","hash":"3a0869ca1b09af07d82987e343a3bc4cb9558ecb","modified":1684921311606},{"_id":"themes/3-hexo/source/js/search.js","hash":"c80c9a231ee040c7adc07a477793873fb85ce8bc","modified":1684921311607},{"_id":"themes/3-hexo/source/js/script.js","hash":"f261fb46d822e9b89296c454a965ff34e4b244f9","modified":1684921311607},{"_id":"themes/3-hexo/source/js/titleTip.js","hash":"81dca549063e29ba3a4a278f0f4388eba8a2167b","modified":1684921311607},{"_id":"themes/3-hexo/layout/_partial/comments/click2show.ejs","hash":"fa6675230f8c313236604e26926b142f4f418bdd","modified":1684921311588},{"_id":"themes/3-hexo/layout/_partial/comments/disqus.ejs","hash":"cd0022ce7e6d6efb07a00e87477cdf791f7f6703","modified":1684921311588},{"_id":"themes/3-hexo/layout/_partial/comments/gitment.ejs","hash":"f16442568b43d034faaa8e3507f5ae8da34c7b72","modified":1684921311588},{"_id":"themes/3-hexo/layout/_partial/comments/gitalk.ejs","hash":"fbd3c7d72c8354d700918390c6cbfc0a11408277","modified":1684921311588},{"_id":"themes/3-hexo/layout/_partial/comments/utteranc.ejs","hash":"c76773b96860940083baf16470b7b80ac098e645","modified":1684921311589},{"_id":"themes/3-hexo/source/css/_partial/comment.styl","hash":"2a9b5ffb759be85545a89f6d1194579a800f51a5","modified":1684921311592},{"_id":"themes/3-hexo/layout/_partial/comments/livere.ejs","hash":"e820aa16b5ed4e024616b5e2d424925820d43e56","modified":1684921311589},{"_id":"themes/3-hexo/source/css/_partial/dashang.styl","hash":"f6447a2ac407228e1d53e3455db2919ac0e9f094","modified":1684921311592},{"_id":"themes/3-hexo/source/css/_partial/font.styl","hash":"c68d6942ed62f9cce8a9042f5a59055a0ee5441c","modified":1684921311592},{"_id":"themes/3-hexo/source/css/_partial/fade.styl","hash":"4f687cbc74caf8a0887f5e89250284a9bce8b5c1","modified":1684921311592},{"_id":"themes/3-hexo/source/css/_partial/nav-left.styl","hash":"d35df7f5e68880d1f1ebec541b816f8257fd42cb","modified":1684921311592},{"_id":"themes/3-hexo/source/css/_partial/nav-right.styl","hash":"44bdb1fe3e75996f24f2656770d6a376330e898d","modified":1684921311593},{"_id":"themes/3-hexo/source/css/_partial/full-toc.styl","hash":"0143711c1221cb4e70a3db866754d79c8a81d253","modified":1684921311592},{"_id":"themes/3-hexo/source/css/_partial/nprogress.styl","hash":"65efbddd23a264e7d1e85f4073228526770e833c","modified":1684921311593},{"_id":"themes/3-hexo/source/css/_partial/num-load.styl","hash":"4b996440bba8ec755aa70bc6d074d7dbba55ec0c","modified":1684921311593},{"_id":"themes/3-hexo/source/css/fonts/icomoon.eot","hash":"b6195bedc1cb2f9cfcb26cc27021f2e94be2ab0a","modified":1684921311593},{"_id":"themes/3-hexo/source/css/_partial/post.styl","hash":"0dd8d208081b92e05d6db3361743c520a2816828","modified":1684921311593},{"_id":"themes/3-hexo/source/css/fonts/icomoon.svg","hash":"37ac1ef28b03f46bf3ad2606c86f0e1ec3e4405f","modified":1684921311593},{"_id":"themes/3-hexo/source/css/fonts/icomoon.woff","hash":"3985d29416bb9b19f50a2f20f2bbbce47f10af8d","modified":1684921311594},{"_id":"themes/3-hexo/source/css/fonts/iconfont.eot","hash":"b14b8624988ff069aff3145f88c0d7ac49052bd3","modified":1684921311594},{"_id":"themes/3-hexo/source/css/fonts/icomoon.ttf","hash":"eb976d8b8559fcddfc2658a03a4350cb566fc06b","modified":1684921311594},{"_id":"themes/3-hexo/source/css/fonts/iconfont.svg","hash":"13974fe35fca836e870a960ecb11b7eca2e036f8","modified":1684921311594},{"_id":"themes/3-hexo/source/css/fonts/iconfont.ttf","hash":"140829ecf12d30c6e18d8dc6dc0c188a66addd25","modified":1684921311595},{"_id":"themes/3-hexo/source/css/fonts/iconfont.woff","hash":"0d2d4559f1ac4fa801eb8cc099fa5bf9dcf955ef","modified":1684921311595},{"_id":"themes/3-hexo/source/css/fonts/iconfont.woff2","hash":"b0317a0b2ebb1181a8bf5a97d03556dd54538645","modified":1684921311595},{"_id":"themes/3-hexo/source/css/hl_theme/atom-dark.styl","hash":"f3eb4e5feda9cbd6242ccf44ca064e2979b5d719","modified":1684921311596},{"_id":"themes/3-hexo/source/css/fonts/selection.json","hash":"57c7f100019d57b512aab509185cb0a6eb9aa4c8","modified":1684921311595},{"_id":"themes/3-hexo/source/css/hl_theme/atom-light.styl","hash":"553987211d3323a7dfc0b08786b183a3435978c9","modified":1684921311596},{"_id":"themes/3-hexo/source/css/hl_theme/brown-paper.styl","hash":"03af387edcc1cf8c18d12e9c440fd51b6cf425b6","modified":1684921311596},{"_id":"themes/3-hexo/source/css/hl_theme/darcula.styl","hash":"2bfc14f27ccca108b4b3755782de8366e8bd001e","modified":1684921311596},{"_id":"themes/3-hexo/source/css/hl_theme/github-gist.styl","hash":"5e05b19832c1099bd9d284bc3ed00dc8a3d7ee23","modified":1684921311596},{"_id":"themes/3-hexo/source/css/hl_theme/github.styl","hash":"53276ff1f224f691dfe811e82c0af7f4476abf5d","modified":1684921311596},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-dark.styl","hash":"315ad610d303caba9eac80a7d51002193a15478a","modified":1684921311597},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-light.styl","hash":"1bece084b1dbbbd4af064f05feffd8c332b96a48","modified":1684921311597},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-dark.styl","hash":"e9c190f9ffc37a13cac430512e4e0c760205be4a","modified":1684921311597},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-light.styl","hash":"0c3ccd0d64e7504c7061d246dc32737f502f64e4","modified":1684921311597},{"_id":"themes/3-hexo/source/css/hl_theme/railscasts.styl","hash":"a6e8cfd2202afd7893f5268f3437421e35066e7b","modified":1684921311597},{"_id":"themes/3-hexo/source/css/hl_theme/rainbow.styl","hash":"e5c37646a9d9c1094f9aab7a7c65a4b242e8db00","modified":1684921311597},{"_id":"themes/3-hexo/source/css/hl_theme/school-book.styl","hash":"51659351b391a2be5c68728bb51b7ad467c5e0db","modified":1684921311597},{"_id":"themes/3-hexo/source/css/hl_theme/sublime.styl","hash":"501d75ef0f4385bea24d9b9b4cc434ba68d4be27","modified":1684921311597},{"_id":"themes/3-hexo/source/css/hl_theme/sunburst.styl","hash":"2aa9817e68fb2ed216781ea04b733039ebe18214","modified":1684921311598},{"_id":"themes/3-hexo/source/css/hl_theme/zenbum.styl","hash":"933a3b196d01254dea5e6f48105ea15e210ae000","modified":1684921311598},{"_id":"themes/3-hexo/source/img/avatar.jpg","hash":"cea2648490b69be800f14025ca2f50a878e7a9f9","modified":1684922423611},{"_id":"themes/3-hexo/source/img/weixin.jpg","hash":"8dafb22561698d0758fba9ea2a45abf6ad3512a2","modified":1684921311601},{"_id":"themes/3-hexo/source/js/gitment.js","hash":"59a1e03f2b0ce61dd9bd405d3c52d3e07cc10dec","modified":1684921311606},{"_id":"themes/3-hexo/source/js/gitalk.js","hash":"26ba4841dcb4b178f730f53a8d1f4a7c89442b4f","modified":1684921311604},{"_id":"public/about/index.html","hash":"e2e67ce23828f5b4347259bf7284a73317f5ba20","modified":1685409522165},{"_id":"public/2023/05/30/Linux-Ubuntu-离线安装包/index.html","hash":"b67861fefbcdbfe5dbe7c24122e4053f753cccc4","modified":1685409522165},{"_id":"public/2023/05/30/Linux-Ubuntu-换源/index.html","hash":"5f30515f4c8db2177f9f604b0051e1fa9ac4451a","modified":1685409522165},{"_id":"public/2023/05/27/C语言-C-C-Primer-Plus-示例程序/index.html","hash":"4c3d5874ae31a28f19c0b6015e627ccb2b7db045","modified":1685409522165},{"_id":"public/2023/05/27/C语言-C-C示例程序及解释/index.html","hash":"ee155c068be57df4b99668679aac389dabf78d85","modified":1685409522165},{"_id":"public/2023/05/26/Hexo-七牛云备份/index.html","hash":"10ca1cd28b72c10bd9a39a6c835642e6b33d953a","modified":1685409522165},{"_id":"public/2023/05/25/Hexo-Hexo-添加看板娘/index.html","hash":"6ebe267ab18bcc6a1ef3a09c8ce41a6c5051b453","modified":1685409522165},{"_id":"public/2023/05/25/Hexo-Hexo-数据备份/index.html","hash":"eb13602f32ce0be6a67713155f3f649b6971728c","modified":1685409522165},{"_id":"public/2023/05/25/Gitlab-Gitlab-重置管理员密码/index.html","hash":"97218e3fc34bcadda554eee0840abd74a450f37e","modified":1685409522165},{"_id":"public/2023/05/25/VSCode-VSCode-设置/index.html","hash":"9982caac047806df5c699e4d4e6b8f30728d28a5","modified":1685409522165},{"_id":"public/2023/05/25/Hexo-Hexo-分类管理md文件/index.html","hash":"3dad19e4ec708a9e96bbe39be88ab3b5ebdbbe63","modified":1685409522165},{"_id":"public/2023/05/25/思考-散落的知识如何归化/index.html","hash":"54534ef9f9a38495bddf00353b7009a0cda95373","modified":1685409522165},{"_id":"public/2023/05/25/Jenkins-Jenkins-Gitlab构建配置/index.html","hash":"cd2af3bffd4f4812b283419d92dea2fffd7280eb","modified":1685409522165},{"_id":"public/2023/05/25/Jenkins-Jenkins-模版/index.html","hash":"5a92f06f3941ca541dc6585a276ba35c2778ea59","modified":1685409522165},{"_id":"public/2023/05/25/Jenkins-Jenkins-远程构建配置/index.html","hash":"48cb661643ca6b8018d49d81bcd8268641332d09","modified":1685409522165},{"_id":"public/2023/05/25/Jenkins-Jenkins-重置管理员密码/index.html","hash":"3caaec7791da42d7711b5e077b3ba799330b254d","modified":1685409522165},{"_id":"public/2023/05/25/Git-Git-一份代码同时提交两个仓库/index.html","hash":"b3074309828863b2bedbb121cf226b4c7a0f788c","modified":1685409522165},{"_id":"public/archives/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/archives/page/2/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/archives/2023/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/archives/2023/page/2/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/archives/2023/05/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/archives/2023/05/page/2/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/categories/编程语言/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/categories/工具/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/categories/工具/page/2/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/categories/编程语言/C/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/categories/工具/Hexo/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/categories/工具/Git/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/categories/工具/Jenkins/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/categories/工具/Gitlab/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/categories/系统/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/categories/工具/VSCode/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/categories/思考/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/categories/系统/Linux/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/page/2/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/tags/C/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/tags/Git/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/tags/Gitlab/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/tags/hexo/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/tags/Hexo/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/tags/Jenkins/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/tags/Ubuntu/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/tags/VSCode/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/tags/思考/index.html","hash":"116ef5450e1c9a3a4843052ff72828799a151676","modified":1685409522165},{"_id":"public/CNAME","hash":"fa9d6db13bb07dea025fba81f94418914c924e06","modified":1685409522165},{"_id":"public/img/alipay.jpg","hash":"e457d1d3dfefbbd824d154cf756a2c6d10b812a2","modified":1685409522165},{"_id":"public/img/article-list-background.jpeg","hash":"4fdf8b3e53dd02d6ee6360aebfadb0cba1fb5633","modified":1685409522165},{"_id":"public/img/gov.png","hash":"f31c9f47faedf7f33b9580d6284ab891fb697560","modified":1685409522165},{"_id":"public/img/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1685409522165},{"_id":"public/css/fonts/icomoon.eot","hash":"b6195bedc1cb2f9cfcb26cc27021f2e94be2ab0a","modified":1685409522165},{"_id":"public/css/fonts/icomoon.svg","hash":"37ac1ef28b03f46bf3ad2606c86f0e1ec3e4405f","modified":1685409522165},{"_id":"public/css/fonts/icomoon.ttf","hash":"eb976d8b8559fcddfc2658a03a4350cb566fc06b","modified":1685409522165},{"_id":"public/img/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1685409522165},{"_id":"public/css/fonts/iconfont.eot","hash":"b14b8624988ff069aff3145f88c0d7ac49052bd3","modified":1685409522165},{"_id":"public/css/fonts/icomoon.woff","hash":"3985d29416bb9b19f50a2f20f2bbbce47f10af8d","modified":1685409522165},{"_id":"public/css/fonts/iconfont.svg","hash":"13974fe35fca836e870a960ecb11b7eca2e036f8","modified":1685409522165},{"_id":"public/css/fonts/iconfont.woff2","hash":"b0317a0b2ebb1181a8bf5a97d03556dd54538645","modified":1685409522165},{"_id":"public/css/fonts/iconfont.woff","hash":"0d2d4559f1ac4fa801eb8cc099fa5bf9dcf955ef","modified":1685409522165},{"_id":"public/css/fonts/iconfont.ttf","hash":"140829ecf12d30c6e18d8dc6dc0c188a66addd25","modified":1685409522165},{"_id":"public/img/avatar.jpg","hash":"cea2648490b69be800f14025ca2f50a878e7a9f9","modified":1685409522165},{"_id":"public/css/mobile.css","hash":"5998f6fc27998596beb1e40e4bc3c43be2ed764c","modified":1685409522165},{"_id":"public/js/search.js","hash":"c80c9a231ee040c7adc07a477793873fb85ce8bc","modified":1685409522165},{"_id":"public/js/titleTip.js","hash":"81dca549063e29ba3a4a278f0f4388eba8a2167b","modified":1685409522165},{"_id":"public/css/hl_theme/atom-dark.css","hash":"88d11052a24e8100af6248eb4dbe1ce7b0e96408","modified":1685409522165},{"_id":"public/css/hl_theme/atom-light.css","hash":"d31edb9816dae6b01410028bceb91757a962f780","modified":1685409522165},{"_id":"public/css/hl_theme/brown-paper.css","hash":"500c8e750373f6656ff49a7857c871ceedcf8777","modified":1685409522165},{"_id":"public/css/hl_theme/darcula.css","hash":"4341074bae4bc9f0b86e32b623e27babc0159b6e","modified":1685409522165},{"_id":"public/css/hl_theme/github-gist.css","hash":"7a41c1c479d09df875f99f1f6d94aac42e9e2ad0","modified":1685409522165},{"_id":"public/css/hl_theme/github.css","hash":"e05a0806a508a26b9f3f3794b6b588ec6504ad3f","modified":1685409522165},{"_id":"public/css/hl_theme/gruvbox-light.css","hash":"30514aaa242a34647aa666cfca4fc74c595ea8f2","modified":1685409522165},{"_id":"public/css/hl_theme/gruvbox-dark.css","hash":"8c440d9b4ee19ac03eaee3c6af78ba52e5ba5535","modified":1685409522165},{"_id":"public/css/hl_theme/kimbie-dark.css","hash":"728527fcc308da454722c119b89e6da3025bd1e3","modified":1685409522165},{"_id":"public/css/hl_theme/railscasts.css","hash":"511f2fd2a84d426e5da5cb17880cc08f73beb002","modified":1685409522165},{"_id":"public/css/hl_theme/kimbie-light.css","hash":"0c61926c989163faefb031d27bce3e287d6e10f2","modified":1685409522165},{"_id":"public/css/hl_theme/rainbow.css","hash":"7ff4251938076ddb7e4e49413db82653e5b61321","modified":1685409522165},{"_id":"public/css/hl_theme/school-book.css","hash":"ffbbcd13a74ac2404262c50b7a43053dfd0096ff","modified":1685409522165},{"_id":"public/css/hl_theme/sublime.css","hash":"f65c5b116d9213afb9c324384a2f3bc86cb71121","modified":1685409522165},{"_id":"public/css/hl_theme/sunburst.css","hash":"8a135abac1512cf430d1d1ad2304b79afa1a4d6e","modified":1685409522165},{"_id":"public/css/hl_theme/zenbum.css","hash":"0a78f74a93568e20b32ca7427c719e9bae9a0b55","modified":1685409522165},{"_id":"public/css/gitalk.css","hash":"58177ce227c50ee359fbf99a4fdd26058887afc5","modified":1685409522165},{"_id":"public/css/style.css","hash":"6d86fbf04335cab51ee86d74d631fc18c96c8d9f","modified":1685409522165},{"_id":"public/js/jquery.pjax.js","hash":"191c49fdb40dff115a49cfd2b30dffb888d86550","modified":1685409522165},{"_id":"public/js/iconfont.js","hash":"3a0869ca1b09af07d82987e343a3bc4cb9558ecb","modified":1685409522165},{"_id":"public/js/script.js","hash":"f261fb46d822e9b89296c454a965ff34e4b244f9","modified":1685409522165},{"_id":"public/css/fonts/selection.json","hash":"047b615ea32dc48dae5b964061427d41feaaafdf","modified":1685409522165},{"_id":"public/js/gitment.js","hash":"59a1e03f2b0ce61dd9bd405d3c52d3e07cc10dec","modified":1685409522165},{"_id":"public/img/weixin.jpg","hash":"8dafb22561698d0758fba9ea2a45abf6ad3512a2","modified":1685409522165},{"_id":"public/js/gitalk.js","hash":"26ba4841dcb4b178f730f53a8d1f4a7c89442b4f","modified":1685409522165}],"Category":[{"name":"编程语言","_id":"cli9lbahy0003cgg0at2ngirc"},{"name":"工具","_id":"cli9lbai6000dcgg07lu7646e"},{"name":"C","parent":"cli9lbahy0003cgg0at2ngirc","_id":"cli9lbaia000ncgg0e0f7amx4"},{"name":"Hexo","parent":"cli9lbai6000dcgg07lu7646e","_id":"cli9lbaig0019cgg06llw2gu6"},{"name":"Git","parent":"cli9lbai6000dcgg07lu7646e","_id":"cli9lbaig001ecgg04t14610z"},{"name":"Jenkins","parent":"cli9lbai6000dcgg07lu7646e","_id":"cli9lbaii001icgg08jqn77pu"},{"name":"Gitlab","parent":"cli9lbai6000dcgg07lu7646e","_id":"cli9lbaij001rcgg08lcg9u9j"},{"name":"系统","_id":"cli9lbail0026cgg0gjoq3m1b"},{"name":"VSCode","parent":"cli9lbai6000dcgg07lu7646e","_id":"cli9lbain002ecgg01w2n6pah"},{"name":"思考","_id":"cli9lbain002gcgg06ndq8k91"},{"name":"Linux","parent":"cli9lbail0026cgg0gjoq3m1b","_id":"cli9lbaio002ncgg0bw5wbviu"}],"Data":[],"Page":[{"title":"about","date":"2023-05-24T09:54:48.000Z","_content":"\n神乐g —— 不入流程序员👨🏻‍💻\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2023-05-24 17:54:48\n---\n\n神乐g —— 不入流程序员👨🏻‍💻\n","updated":"2023-05-24T09:55:31.315Z","path":"about/index.html","comments":1,"layout":"page","_id":"cli9lbahs0000cgg097hud3zo","content":"<p>神乐g —— 不入流程序员👨🏻‍💻</p>\n","site":{"data":{}},"excerpt":"","more":"<p>神乐g —— 不入流程序员👨🏻‍💻</p>\n"}],"Post":[{"title":"C-C Primer Plus 示例程序","date":"2023-05-27T04:35:41.000Z","_content":"\n# 第2章 C语言概述\n\n## first.c\n\n```c\n// 示例程序\n#include <stdio.h>\n\nint main(void) {\n    int num;  // 定义变量\n    num = 1;  // 给变量赋值\n\n    printf(\"I am a simple \");  // 调用函数，输出字符串\n    printf(\"computer.\\n\");  // 输出占位符\n    printf(\"My favorite number is %d because it is first. \\n\", num);  // 占位符输出 \n\n    return 0;  // 返回值\n}\n```\n\n输出：\n\n```\nI am a simple computer.\nMy favorite number is 1 because it is first. \n```\n\n\n\n## fathm_ft.c\n\n单位转换\n\n```c\n#include <stdio.h>\n\nint main(void) {\n    int feet, fathoms;\n    fathoms = 2;\n    feet = 6 * fathoms;\n\n    printf(\"There ara %d feet in %d fathoms!\\n\", feet, fathoms);\n    printf(\"Yes, I said %d feet!\\n\", 6 * fathoms);  // 待打印值可以是表达式\n\n    return 0;\n}\n```\n\n输出：\n\n```\nThere ara 12 feet in 2 fathoms!\nYes, I said 12 feet!\n```\n\n\n\n## tow_func.c\n\n包含多个函数\n\n```c\n#include <stdio.h>\n\nvoid butler(void); // 声明函数原型，告知编译器要使用该函数\n\nint main(void) {\n    printf(\"I will summon the butler function.\\n\");\n    butler();\n    printf(\"Yes. Bring me some tea and writeable DVDs. \\n\");\n\n    return 0;\n}\n\n// 开始定义函数\nvoid butler(void) {\n    printf(\"You rang, sir?\\n\");\n}\n```\n\n输出：\n\n```\nI will summon the butler function.\nYou rang, sir?\nYes. Bring me some tea and writeable DVDs. \n```\n\n## first.c\n\n```c\n#include <stdio.h>\n\nint main(void) {\n    int num;  // 定义变量\n    num = 1;  // 给变量赋值\n\n    printf(\"I am a simple \");  // 调用函数，输出字符串\n    printf(\"computer.\\n\");  // 输出占位符\n    printf(\"My favorite number is %d because it is first. \\n\", num);  // 占位符输出 \n\n    return 0;  // 返回值\n}\n```\n\n输出：\n\n```\nI am a simple computer.\nMy favorite number is 1 because it is first. \n```\n\n## first.c\n\n```c\n#include <stdio.h>\n\nint main(void) {\n    int num;  // 定义变量\n    num = 1;  // 给变量赋值\n\n    printf(\"I am a simple \");  // 调用函数，输出字符串\n    printf(\"computer.\\n\");  // 输出占位符\n    printf(\"My favorite number is %d because it is first. \\n\", num);  // 占位符输出 \n\n    return 0;  // 返回值\n}\n```\n\n输出：\n\n```\nI am a simple computer.\nMy favorite number is 1 because it is first. \n```\n\n## first.c\n\n```c\n#include <stdio.h>\n\nint main(void) {\n    int num;  // 定义变量\n    num = 1;  // 给变量赋值\n\n    printf(\"I am a simple \");  // 调用函数，输出字符串\n    printf(\"computer.\\n\");  // 输出占位符\n    printf(\"My favorite number is %d because it is first. \\n\", num);  // 占位符输出 \n\n    return 0;  // 返回值\n}\n```\n\n输出：\n\n```\nI am a simple computer.\nMy favorite number is 1 because it is first. \n```\n\n","source":"_posts/C语言/C-C Primer Plus 示例程序.md","raw":"---\ntitle: C-C Primer Plus 示例程序\ncategories:\n  - 编程语言\n  - C\ntags:\n  - C\ndate: 2023-05-27 12:35:41\n---\n\n# 第2章 C语言概述\n\n## first.c\n\n```c\n// 示例程序\n#include <stdio.h>\n\nint main(void) {\n    int num;  // 定义变量\n    num = 1;  // 给变量赋值\n\n    printf(\"I am a simple \");  // 调用函数，输出字符串\n    printf(\"computer.\\n\");  // 输出占位符\n    printf(\"My favorite number is %d because it is first. \\n\", num);  // 占位符输出 \n\n    return 0;  // 返回值\n}\n```\n\n输出：\n\n```\nI am a simple computer.\nMy favorite number is 1 because it is first. \n```\n\n\n\n## fathm_ft.c\n\n单位转换\n\n```c\n#include <stdio.h>\n\nint main(void) {\n    int feet, fathoms;\n    fathoms = 2;\n    feet = 6 * fathoms;\n\n    printf(\"There ara %d feet in %d fathoms!\\n\", feet, fathoms);\n    printf(\"Yes, I said %d feet!\\n\", 6 * fathoms);  // 待打印值可以是表达式\n\n    return 0;\n}\n```\n\n输出：\n\n```\nThere ara 12 feet in 2 fathoms!\nYes, I said 12 feet!\n```\n\n\n\n## tow_func.c\n\n包含多个函数\n\n```c\n#include <stdio.h>\n\nvoid butler(void); // 声明函数原型，告知编译器要使用该函数\n\nint main(void) {\n    printf(\"I will summon the butler function.\\n\");\n    butler();\n    printf(\"Yes. Bring me some tea and writeable DVDs. \\n\");\n\n    return 0;\n}\n\n// 开始定义函数\nvoid butler(void) {\n    printf(\"You rang, sir?\\n\");\n}\n```\n\n输出：\n\n```\nI will summon the butler function.\nYou rang, sir?\nYes. Bring me some tea and writeable DVDs. \n```\n\n## first.c\n\n```c\n#include <stdio.h>\n\nint main(void) {\n    int num;  // 定义变量\n    num = 1;  // 给变量赋值\n\n    printf(\"I am a simple \");  // 调用函数，输出字符串\n    printf(\"computer.\\n\");  // 输出占位符\n    printf(\"My favorite number is %d because it is first. \\n\", num);  // 占位符输出 \n\n    return 0;  // 返回值\n}\n```\n\n输出：\n\n```\nI am a simple computer.\nMy favorite number is 1 because it is first. \n```\n\n## first.c\n\n```c\n#include <stdio.h>\n\nint main(void) {\n    int num;  // 定义变量\n    num = 1;  // 给变量赋值\n\n    printf(\"I am a simple \");  // 调用函数，输出字符串\n    printf(\"computer.\\n\");  // 输出占位符\n    printf(\"My favorite number is %d because it is first. \\n\", num);  // 占位符输出 \n\n    return 0;  // 返回值\n}\n```\n\n输出：\n\n```\nI am a simple computer.\nMy favorite number is 1 because it is first. \n```\n\n## first.c\n\n```c\n#include <stdio.h>\n\nint main(void) {\n    int num;  // 定义变量\n    num = 1;  // 给变量赋值\n\n    printf(\"I am a simple \");  // 调用函数，输出字符串\n    printf(\"computer.\\n\");  // 输出占位符\n    printf(\"My favorite number is %d because it is first. \\n\", num);  // 占位符输出 \n\n    return 0;  // 返回值\n}\n```\n\n输出：\n\n```\nI am a simple computer.\nMy favorite number is 1 because it is first. \n```\n\n","slug":"C语言-C-C-Primer-Plus-示例程序","published":1,"updated":"2023-05-29T17:33:24.098Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9lbahu0001cgg0gqv14y7s","content":"<h1 id=\"第2章-C语言概述\"><a href=\"#第2章-C语言概述\" class=\"headerlink\" title=\"第2章 C语言概述\"></a>第2章 C语言概述</h1><h2 id=\"first-c\"><a href=\"#first-c\" class=\"headerlink\" title=\"first.c\"></a>first.c</h2><pre><code class=\"c\">// 示例程序\n#include &lt;stdio.h&gt;\n\nint main(void) &#123;\n    int num;  // 定义变量\n    num = 1;  // 给变量赋值\n\n    printf(&quot;I am a simple &quot;);  // 调用函数，输出字符串\n    printf(&quot;computer.\\n&quot;);  // 输出占位符\n    printf(&quot;My favorite number is %d because it is first. \\n&quot;, num);  // 占位符输出 \n\n    return 0;  // 返回值\n&#125;\n</code></pre>\n<p>输出：</p>\n<pre><code>I am a simple computer.\nMy favorite number is 1 because it is first. \n</code></pre>\n<h2 id=\"fathm-ft-c\"><a href=\"#fathm-ft-c\" class=\"headerlink\" title=\"fathm_ft.c\"></a>fathm_ft.c</h2><p>单位转换</p>\n<pre><code class=\"c\">#include &lt;stdio.h&gt;\n\nint main(void) &#123;\n    int feet, fathoms;\n    fathoms = 2;\n    feet = 6 * fathoms;\n\n    printf(&quot;There ara %d feet in %d fathoms!\\n&quot;, feet, fathoms);\n    printf(&quot;Yes, I said %d feet!\\n&quot;, 6 * fathoms);  // 待打印值可以是表达式\n\n    return 0;\n&#125;\n</code></pre>\n<p>输出：</p>\n<pre><code>There ara 12 feet in 2 fathoms!\nYes, I said 12 feet!\n</code></pre>\n<h2 id=\"tow-func-c\"><a href=\"#tow-func-c\" class=\"headerlink\" title=\"tow_func.c\"></a>tow_func.c</h2><p>包含多个函数</p>\n<pre><code class=\"c\">#include &lt;stdio.h&gt;\n\nvoid butler(void); // 声明函数原型，告知编译器要使用该函数\n\nint main(void) &#123;\n    printf(&quot;I will summon the butler function.\\n&quot;);\n    butler();\n    printf(&quot;Yes. Bring me some tea and writeable DVDs. \\n&quot;);\n\n    return 0;\n&#125;\n\n// 开始定义函数\nvoid butler(void) &#123;\n    printf(&quot;You rang, sir?\\n&quot;);\n&#125;\n</code></pre>\n<p>输出：</p>\n<pre><code>I will summon the butler function.\nYou rang, sir?\nYes. Bring me some tea and writeable DVDs. \n</code></pre>\n<h2 id=\"first-c-1\"><a href=\"#first-c-1\" class=\"headerlink\" title=\"first.c\"></a>first.c</h2><pre><code class=\"c\">#include &lt;stdio.h&gt;\n\nint main(void) &#123;\n    int num;  // 定义变量\n    num = 1;  // 给变量赋值\n\n    printf(&quot;I am a simple &quot;);  // 调用函数，输出字符串\n    printf(&quot;computer.\\n&quot;);  // 输出占位符\n    printf(&quot;My favorite number is %d because it is first. \\n&quot;, num);  // 占位符输出 \n\n    return 0;  // 返回值\n&#125;\n</code></pre>\n<p>输出：</p>\n<pre><code>I am a simple computer.\nMy favorite number is 1 because it is first. \n</code></pre>\n<h2 id=\"first-c-2\"><a href=\"#first-c-2\" class=\"headerlink\" title=\"first.c\"></a>first.c</h2><pre><code class=\"c\">#include &lt;stdio.h&gt;\n\nint main(void) &#123;\n    int num;  // 定义变量\n    num = 1;  // 给变量赋值\n\n    printf(&quot;I am a simple &quot;);  // 调用函数，输出字符串\n    printf(&quot;computer.\\n&quot;);  // 输出占位符\n    printf(&quot;My favorite number is %d because it is first. \\n&quot;, num);  // 占位符输出 \n\n    return 0;  // 返回值\n&#125;\n</code></pre>\n<p>输出：</p>\n<pre><code>I am a simple computer.\nMy favorite number is 1 because it is first. \n</code></pre>\n<h2 id=\"first-c-3\"><a href=\"#first-c-3\" class=\"headerlink\" title=\"first.c\"></a>first.c</h2><pre><code class=\"c\">#include &lt;stdio.h&gt;\n\nint main(void) &#123;\n    int num;  // 定义变量\n    num = 1;  // 给变量赋值\n\n    printf(&quot;I am a simple &quot;);  // 调用函数，输出字符串\n    printf(&quot;computer.\\n&quot;);  // 输出占位符\n    printf(&quot;My favorite number is %d because it is first. \\n&quot;, num);  // 占位符输出 \n\n    return 0;  // 返回值\n&#125;\n</code></pre>\n<p>输出：</p>\n<pre><code>I am a simple computer.\nMy favorite number is 1 because it is first. \n</code></pre>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"第2章-C语言概述\"><a href=\"#第2章-C语言概述\" class=\"headerlink\" title=\"第2章 C语言概述\"></a>第2章 C语言概述</h1><h2 id=\"first-c\"><a href=\"#first-c\" class=\"headerlink\" title=\"first.c\"></a>first.c</h2><pre><code class=\"c\">// 示例程序\n#include &lt;stdio.h&gt;\n\nint main(void) &#123;\n    int num;  // 定义变量\n    num = 1;  // 给变量赋值\n\n    printf(&quot;I am a simple &quot;);  // 调用函数，输出字符串\n    printf(&quot;computer.\\n&quot;);  // 输出占位符\n    printf(&quot;My favorite number is %d because it is first. \\n&quot;, num);  // 占位符输出 \n\n    return 0;  // 返回值\n&#125;\n</code></pre>\n<p>输出：</p>\n<pre><code>I am a simple computer.\nMy favorite number is 1 because it is first. \n</code></pre>\n<h2 id=\"fathm-ft-c\"><a href=\"#fathm-ft-c\" class=\"headerlink\" title=\"fathm_ft.c\"></a>fathm_ft.c</h2><p>单位转换</p>\n<pre><code class=\"c\">#include &lt;stdio.h&gt;\n\nint main(void) &#123;\n    int feet, fathoms;\n    fathoms = 2;\n    feet = 6 * fathoms;\n\n    printf(&quot;There ara %d feet in %d fathoms!\\n&quot;, feet, fathoms);\n    printf(&quot;Yes, I said %d feet!\\n&quot;, 6 * fathoms);  // 待打印值可以是表达式\n\n    return 0;\n&#125;\n</code></pre>\n<p>输出：</p>\n<pre><code>There ara 12 feet in 2 fathoms!\nYes, I said 12 feet!\n</code></pre>\n<h2 id=\"tow-func-c\"><a href=\"#tow-func-c\" class=\"headerlink\" title=\"tow_func.c\"></a>tow_func.c</h2><p>包含多个函数</p>\n<pre><code class=\"c\">#include &lt;stdio.h&gt;\n\nvoid butler(void); // 声明函数原型，告知编译器要使用该函数\n\nint main(void) &#123;\n    printf(&quot;I will summon the butler function.\\n&quot;);\n    butler();\n    printf(&quot;Yes. Bring me some tea and writeable DVDs. \\n&quot;);\n\n    return 0;\n&#125;\n\n// 开始定义函数\nvoid butler(void) &#123;\n    printf(&quot;You rang, sir?\\n&quot;);\n&#125;\n</code></pre>\n<p>输出：</p>\n<pre><code>I will summon the butler function.\nYou rang, sir?\nYes. Bring me some tea and writeable DVDs. \n</code></pre>\n<h2 id=\"first-c-1\"><a href=\"#first-c-1\" class=\"headerlink\" title=\"first.c\"></a>first.c</h2><pre><code class=\"c\">#include &lt;stdio.h&gt;\n\nint main(void) &#123;\n    int num;  // 定义变量\n    num = 1;  // 给变量赋值\n\n    printf(&quot;I am a simple &quot;);  // 调用函数，输出字符串\n    printf(&quot;computer.\\n&quot;);  // 输出占位符\n    printf(&quot;My favorite number is %d because it is first. \\n&quot;, num);  // 占位符输出 \n\n    return 0;  // 返回值\n&#125;\n</code></pre>\n<p>输出：</p>\n<pre><code>I am a simple computer.\nMy favorite number is 1 because it is first. \n</code></pre>\n<h2 id=\"first-c-2\"><a href=\"#first-c-2\" class=\"headerlink\" title=\"first.c\"></a>first.c</h2><pre><code class=\"c\">#include &lt;stdio.h&gt;\n\nint main(void) &#123;\n    int num;  // 定义变量\n    num = 1;  // 给变量赋值\n\n    printf(&quot;I am a simple &quot;);  // 调用函数，输出字符串\n    printf(&quot;computer.\\n&quot;);  // 输出占位符\n    printf(&quot;My favorite number is %d because it is first. \\n&quot;, num);  // 占位符输出 \n\n    return 0;  // 返回值\n&#125;\n</code></pre>\n<p>输出：</p>\n<pre><code>I am a simple computer.\nMy favorite number is 1 because it is first. \n</code></pre>\n<h2 id=\"first-c-3\"><a href=\"#first-c-3\" class=\"headerlink\" title=\"first.c\"></a>first.c</h2><pre><code class=\"c\">#include &lt;stdio.h&gt;\n\nint main(void) &#123;\n    int num;  // 定义变量\n    num = 1;  // 给变量赋值\n\n    printf(&quot;I am a simple &quot;);  // 调用函数，输出字符串\n    printf(&quot;computer.\\n&quot;);  // 输出占位符\n    printf(&quot;My favorite number is %d because it is first. \\n&quot;, num);  // 占位符输出 \n\n    return 0;  // 返回值\n&#125;\n</code></pre>\n<p>输出：</p>\n<pre><code>I am a simple computer.\nMy favorite number is 1 because it is first. \n</code></pre>\n"},{"title":"C-C示例程序及解释","date":"2023-05-27T04:35:41.000Z","_content":"\n# 示例程序\n\n```c\n#include <stdio.h>\n\nint main(void) {  // C 标准写法\n  int num;  // 定义一个变量\n  num = 1;  /* 为变量赋值 */\n  \n  printf(\"I am a simple computer\\n\");  // 调用函数\n  printf(\"My favorite number is %d\", num);\n  \n  return 0;\n}\n```\n\n输出：\n\n```\nI am a simple computer\nMy favorite number is 1\n```\n\n# 解释\n\n`#include <stdio.h>`：头文件\n\n* 该行告诉编译器把 stdio.h 中的内容包含在当前程序中。\n* stdio.h 是 C 编译器软件包的标准部分，它提供键盘输入和屏幕输出的支持。\n\n`int main(void) {}`：函数\n\n* 所有的 C 程序一定从 `main()` 函数开始执行，`main()` 函数约定俗成放在第一位。\n* `int` 定义了函数的返回值、`main` 定义函数名、`(void)` 定义参数值（void 表示没有任何参数）、`{}` 定义函数体。\n\n`int num;`：声明一个类型为 int，名为 num 的变量。\n\n* 为变量在内存中分配存储空间，将变量与内存空间对应，确定**位置信息**和**空间大小**（类型作用）。\n* **所有变量必须声明再使用**。\n* 可以用大小写字母、数字、下划线来命名，第一个字符不能是数字。\n\n`num = 1;`：把值 1 赋给变量 num。\n\n`printf(\"I am a simple computer\\n\");`：调用函数\n\n`return 0;`：返回值\n\n* 给调用方返回值，这里给操作系统返回。\n\n\n\n","source":"_posts/C语言/C-C示例程序及解释.md","raw":"---\ntitle: C-C示例程序及解释\ncategories:\n  - 编程语言\n  - C\ntags:\n  - C\ndate: 2023-05-27 12:35:41\n---\n\n# 示例程序\n\n```c\n#include <stdio.h>\n\nint main(void) {  // C 标准写法\n  int num;  // 定义一个变量\n  num = 1;  /* 为变量赋值 */\n  \n  printf(\"I am a simple computer\\n\");  // 调用函数\n  printf(\"My favorite number is %d\", num);\n  \n  return 0;\n}\n```\n\n输出：\n\n```\nI am a simple computer\nMy favorite number is 1\n```\n\n# 解释\n\n`#include <stdio.h>`：头文件\n\n* 该行告诉编译器把 stdio.h 中的内容包含在当前程序中。\n* stdio.h 是 C 编译器软件包的标准部分，它提供键盘输入和屏幕输出的支持。\n\n`int main(void) {}`：函数\n\n* 所有的 C 程序一定从 `main()` 函数开始执行，`main()` 函数约定俗成放在第一位。\n* `int` 定义了函数的返回值、`main` 定义函数名、`(void)` 定义参数值（void 表示没有任何参数）、`{}` 定义函数体。\n\n`int num;`：声明一个类型为 int，名为 num 的变量。\n\n* 为变量在内存中分配存储空间，将变量与内存空间对应，确定**位置信息**和**空间大小**（类型作用）。\n* **所有变量必须声明再使用**。\n* 可以用大小写字母、数字、下划线来命名，第一个字符不能是数字。\n\n`num = 1;`：把值 1 赋给变量 num。\n\n`printf(\"I am a simple computer\\n\");`：调用函数\n\n`return 0;`：返回值\n\n* 给调用方返回值，这里给操作系统返回。\n\n\n\n","slug":"C语言-C-C示例程序及解释","published":1,"updated":"2023-05-29T17:30:33.777Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9lbahx0002cgg0bnfq2aw6","content":"<h1 id=\"示例程序\"><a href=\"#示例程序\" class=\"headerlink\" title=\"示例程序\"></a>示例程序</h1><pre><code class=\"c\">#include &lt;stdio.h&gt;\n\nint main(void) &#123;  // C 标准写法\n  int num;  // 定义一个变量\n  num = 1;  /* 为变量赋值 */\n  \n  printf(&quot;I am a simple computer\\n&quot;);  // 调用函数\n  printf(&quot;My favorite number is %d&quot;, num);\n  \n  return 0;\n&#125;\n</code></pre>\n<p>输出：</p>\n<pre><code>I am a simple computer\nMy favorite number is 1\n</code></pre>\n<h1 id=\"解释\"><a href=\"#解释\" class=\"headerlink\" title=\"解释\"></a>解释</h1><p><code>#include &lt;stdio.h&gt;</code>：头文件</p>\n<ul>\n<li>该行告诉编译器把 stdio.h 中的内容包含在当前程序中。</li>\n<li>stdio.h 是 C 编译器软件包的标准部分，它提供键盘输入和屏幕输出的支持。</li>\n</ul>\n<p><code>int main(void) &#123;&#125;</code>：函数</p>\n<ul>\n<li>所有的 C 程序一定从 <code>main()</code> 函数开始执行，<code>main()</code> 函数约定俗成放在第一位。</li>\n<li><code>int</code> 定义了函数的返回值、<code>main</code> 定义函数名、<code>(void)</code> 定义参数值（void 表示没有任何参数）、<code>&#123;&#125;</code> 定义函数体。</li>\n</ul>\n<p><code>int num;</code>：声明一个类型为 int，名为 num 的变量。</p>\n<ul>\n<li>为变量在内存中分配存储空间，将变量与内存空间对应，确定<strong>位置信息</strong>和<strong>空间大小</strong>（类型作用）。</li>\n<li><strong>所有变量必须声明再使用</strong>。</li>\n<li>可以用大小写字母、数字、下划线来命名，第一个字符不能是数字。</li>\n</ul>\n<p><code>num = 1;</code>：把值 1 赋给变量 num。</p>\n<p><code>printf(&quot;I am a simple computer\\n&quot;);</code>：调用函数</p>\n<p><code>return 0;</code>：返回值</p>\n<ul>\n<li>给调用方返回值，这里给操作系统返回。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"示例程序\"><a href=\"#示例程序\" class=\"headerlink\" title=\"示例程序\"></a>示例程序</h1><pre><code class=\"c\">#include &lt;stdio.h&gt;\n\nint main(void) &#123;  // C 标准写法\n  int num;  // 定义一个变量\n  num = 1;  /* 为变量赋值 */\n  \n  printf(&quot;I am a simple computer\\n&quot;);  // 调用函数\n  printf(&quot;My favorite number is %d&quot;, num);\n  \n  return 0;\n&#125;\n</code></pre>\n<p>输出：</p>\n<pre><code>I am a simple computer\nMy favorite number is 1\n</code></pre>\n<h1 id=\"解释\"><a href=\"#解释\" class=\"headerlink\" title=\"解释\"></a>解释</h1><p><code>#include &lt;stdio.h&gt;</code>：头文件</p>\n<ul>\n<li>该行告诉编译器把 stdio.h 中的内容包含在当前程序中。</li>\n<li>stdio.h 是 C 编译器软件包的标准部分，它提供键盘输入和屏幕输出的支持。</li>\n</ul>\n<p><code>int main(void) &#123;&#125;</code>：函数</p>\n<ul>\n<li>所有的 C 程序一定从 <code>main()</code> 函数开始执行，<code>main()</code> 函数约定俗成放在第一位。</li>\n<li><code>int</code> 定义了函数的返回值、<code>main</code> 定义函数名、<code>(void)</code> 定义参数值（void 表示没有任何参数）、<code>&#123;&#125;</code> 定义函数体。</li>\n</ul>\n<p><code>int num;</code>：声明一个类型为 int，名为 num 的变量。</p>\n<ul>\n<li>为变量在内存中分配存储空间，将变量与内存空间对应，确定<strong>位置信息</strong>和<strong>空间大小</strong>（类型作用）。</li>\n<li><strong>所有变量必须声明再使用</strong>。</li>\n<li>可以用大小写字母、数字、下划线来命名，第一个字符不能是数字。</li>\n</ul>\n<p><code>num = 1;</code>：把值 1 赋给变量 num。</p>\n<p><code>printf(&quot;I am a simple computer\\n&quot;);</code>：调用函数</p>\n<p><code>return 0;</code>：返回值</p>\n<ul>\n<li>给调用方返回值，这里给操作系统返回。</li>\n</ul>\n"},{"title":"Git-一份代码同时提交两个仓库","date":"2023-05-24T17:42:19.000Z","_content":"\n# 绑定多个远端仓库\n\n绑定第一个仓库，能够正常推送拉取\n\n```bash\n$ git remote add orgin https://gitee.com/enilu/material-admin.git\n```\n\n绑定第二个仓库，只做推送\n\n```bash\n$ git remote set-url --add origin https://github.com/enilu/material-admin.git\n```\n\n这个时候查看远端仓库信息会有两个 Push 的远程仓库\n\n```bash\n$ git remote -v\norgin   https://github.com/MeterosBehind/MyJava.git (fetch)\norgin   https://github.com/MeterosBehind/MyJava.git (push)\norgin   https://gitee.com/youngforever1728/my-java.git (push)\n```\n\n之后再进行 add commit push 即可，会将代码同时 Push 到两个远程仓库中\n\n","source":"_posts/Git/Git-一份代码同时提交两个仓库.md","raw":"---\ntitle: Git-一份代码同时提交两个仓库\ncategories:\n  - 工具\n  - Git\ntags:\n  - Git\ndate: 2023-05-25 01:42:19\n---\n\n# 绑定多个远端仓库\n\n绑定第一个仓库，能够正常推送拉取\n\n```bash\n$ git remote add orgin https://gitee.com/enilu/material-admin.git\n```\n\n绑定第二个仓库，只做推送\n\n```bash\n$ git remote set-url --add origin https://github.com/enilu/material-admin.git\n```\n\n这个时候查看远端仓库信息会有两个 Push 的远程仓库\n\n```bash\n$ git remote -v\norgin   https://github.com/MeterosBehind/MyJava.git (fetch)\norgin   https://github.com/MeterosBehind/MyJava.git (push)\norgin   https://gitee.com/youngforever1728/my-java.git (push)\n```\n\n之后再进行 add commit push 即可，会将代码同时 Push 到两个远程仓库中\n\n","slug":"Git-Git-一份代码同时提交两个仓库","published":1,"updated":"2023-05-25T03:54:54.233Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9lbai10005cgg07w5vgymf","content":"<h1 id=\"绑定多个远端仓库\"><a href=\"#绑定多个远端仓库\" class=\"headerlink\" title=\"绑定多个远端仓库\"></a>绑定多个远端仓库</h1><p>绑定第一个仓库，能够正常推送拉取</p>\n<pre><code class=\"bash\">$ git remote add orgin https://gitee.com/enilu/material-admin.git\n</code></pre>\n<p>绑定第二个仓库，只做推送</p>\n<pre><code class=\"bash\">$ git remote set-url --add origin https://github.com/enilu/material-admin.git\n</code></pre>\n<p>这个时候查看远端仓库信息会有两个 Push 的远程仓库</p>\n<pre><code class=\"bash\">$ git remote -v\norgin   https://github.com/MeterosBehind/MyJava.git (fetch)\norgin   https://github.com/MeterosBehind/MyJava.git (push)\norgin   https://gitee.com/youngforever1728/my-java.git (push)\n</code></pre>\n<p>之后再进行 add commit push 即可，会将代码同时 Push 到两个远程仓库中</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"绑定多个远端仓库\"><a href=\"#绑定多个远端仓库\" class=\"headerlink\" title=\"绑定多个远端仓库\"></a>绑定多个远端仓库</h1><p>绑定第一个仓库，能够正常推送拉取</p>\n<pre><code class=\"bash\">$ git remote add orgin https://gitee.com/enilu/material-admin.git\n</code></pre>\n<p>绑定第二个仓库，只做推送</p>\n<pre><code class=\"bash\">$ git remote set-url --add origin https://github.com/enilu/material-admin.git\n</code></pre>\n<p>这个时候查看远端仓库信息会有两个 Push 的远程仓库</p>\n<pre><code class=\"bash\">$ git remote -v\norgin   https://github.com/MeterosBehind/MyJava.git (fetch)\norgin   https://github.com/MeterosBehind/MyJava.git (push)\norgin   https://gitee.com/youngforever1728/my-java.git (push)\n</code></pre>\n<p>之后再进行 add commit push 即可，会将代码同时 Push 到两个远程仓库中</p>\n"},{"title":"Gitlab-重置管理员密码","date":"2023-05-25T04:35:41.000Z","_content":"\n# 需求\n\nGitlab root 用户忘记密码，需要重置密码\n\n# 步骤\n\n1. 重置 root 密码之前，需先使用 root 用户登录到 gitlab 所在服务器\n    `gitlab-rails console -e production`\n2. 等待控制台加载完毕，有多种找到用户的方法\n    * 通过用户名：`user = User.find_by_username 'exampleuser'`\n    * 通过用户 ID：`user = User.find(123)`\n    * 通过 email：`user = User.find_by(email: 'user@example.com')`\n3. 输入新密码（须符合最低8位限制）：`user.password = '新密码'`\n4. 确认密码：`user.password_confirmation = '新密码'`\n5. 保存更改：`user.save!`\n6. 退出：`exit`\n7. 用新密码登录验证\n\n![详细步骤](https://cdn.myshenle.top/images/202210171421655.png)\n\n# 参考\n\n* [官方文档说明](https://docs.gitlab.com/ee/security/reset_user_password.html)\n","source":"_posts/Gitlab/Gitlab-重置管理员密码.md","raw":"---\ntitle: Gitlab-重置管理员密码\ncategories:\n  - 工具\n  - Gitlab\ntags:\n  - Gitlab\ndate: 2023-05-25 12:35:41\n---\n\n# 需求\n\nGitlab root 用户忘记密码，需要重置密码\n\n# 步骤\n\n1. 重置 root 密码之前，需先使用 root 用户登录到 gitlab 所在服务器\n    `gitlab-rails console -e production`\n2. 等待控制台加载完毕，有多种找到用户的方法\n    * 通过用户名：`user = User.find_by_username 'exampleuser'`\n    * 通过用户 ID：`user = User.find(123)`\n    * 通过 email：`user = User.find_by(email: 'user@example.com')`\n3. 输入新密码（须符合最低8位限制）：`user.password = '新密码'`\n4. 确认密码：`user.password_confirmation = '新密码'`\n5. 保存更改：`user.save!`\n6. 退出：`exit`\n7. 用新密码登录验证\n\n![详细步骤](https://cdn.myshenle.top/images/202210171421655.png)\n\n# 参考\n\n* [官方文档说明](https://docs.gitlab.com/ee/security/reset_user_password.html)\n","slug":"Gitlab-Gitlab-重置管理员密码","published":1,"updated":"2023-05-25T04:40:36.002Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9lbai20006cgg0127c97np","content":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><p>Gitlab root 用户忘记密码，需要重置密码</p>\n<h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><ol>\n<li>重置 root 密码之前，需先使用 root 用户登录到 gitlab 所在服务器<br> <code>gitlab-rails console -e production</code></li>\n<li>等待控制台加载完毕，有多种找到用户的方法<ul>\n<li>通过用户名：<code>user = User.find_by_username &#39;exampleuser&#39;</code></li>\n<li>通过用户 ID：<code>user = User.find(123)</code></li>\n<li>通过 email：<code>user = User.find_by(email: &#39;user@example.com&#39;)</code></li>\n</ul>\n</li>\n<li>输入新密码（须符合最低8位限制）：<code>user.password = &#39;新密码&#39;</code></li>\n<li>确认密码：<code>user.password_confirmation = &#39;新密码&#39;</code></li>\n<li>保存更改：<code>user.save!</code></li>\n<li>退出：<code>exit</code></li>\n<li>用新密码登录验证</li>\n</ol>\n<p><img src=\"https://cdn.myshenle.top/images/202210171421655.png\" alt=\"详细步骤\"></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://docs.gitlab.com/ee/security/reset_user_password.html\">官方文档说明</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><p>Gitlab root 用户忘记密码，需要重置密码</p>\n<h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><ol>\n<li>重置 root 密码之前，需先使用 root 用户登录到 gitlab 所在服务器<br> <code>gitlab-rails console -e production</code></li>\n<li>等待控制台加载完毕，有多种找到用户的方法<ul>\n<li>通过用户名：<code>user = User.find_by_username &#39;exampleuser&#39;</code></li>\n<li>通过用户 ID：<code>user = User.find(123)</code></li>\n<li>通过 email：<code>user = User.find_by(email: &#39;user@example.com&#39;)</code></li>\n</ul>\n</li>\n<li>输入新密码（须符合最低8位限制）：<code>user.password = &#39;新密码&#39;</code></li>\n<li>确认密码：<code>user.password_confirmation = &#39;新密码&#39;</code></li>\n<li>保存更改：<code>user.save!</code></li>\n<li>退出：<code>exit</code></li>\n<li>用新密码登录验证</li>\n</ol>\n<p><img src=\"https://cdn.myshenle.top/images/202210171421655.png\" alt=\"详细步骤\"></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://docs.gitlab.com/ee/security/reset_user_password.html\">官方文档说明</a></li>\n</ul>\n"},{"title":"Hexo-分类管理md文件","date":"2023-05-25T03:44:25.000Z","_content":"\n# 需求\n\n通过 `hexo new` 创建的文章默认统一在 `source/_posts` 文件夹下，文章多了之后容易找不到和冲突\n\n需要更改配置，分类管理文章\n\n# 步骤\n\n## 1. 年月分类\n\n在`_config.yml`文件中修改下面的命令，使默认创建的文章按照年月分类\n`new_post_name: :year/:month/:title.md`\n\n```bash\n$ hexo new post test1\nINFO  Validating config\nINFO  Created: ~/Documents/Hexo/source/_posts/2023/05/test1.md\n```\n\n\n\n## 2. 自定义分类\n\n```bash\n$ hexo new post -p 后端/test2\nINFO  Validating config\nINFO  Created: ~/Documents/Hexo/source/_posts/后端/test2.md\n```\n\n# 配置\n\n## 旧文章处理\n\n在 `source/_posts` 文件夹手动分类，重新生成部署即可\n\n# 参考\n\n* [hexo博客文章多了怎么管理](https://blog.csdn.net/weixin_40251892/article/details/107590794)\n\n","source":"_posts/Hexo/Hexo-分类管理md文件.md","raw":"---\ntitle: Hexo-分类管理md文件\ncategories:\n  - 工具\n  - Hexo\ntags:\n  - hexo\ndate: 2023-05-25 11:44:25\n---\n\n# 需求\n\n通过 `hexo new` 创建的文章默认统一在 `source/_posts` 文件夹下，文章多了之后容易找不到和冲突\n\n需要更改配置，分类管理文章\n\n# 步骤\n\n## 1. 年月分类\n\n在`_config.yml`文件中修改下面的命令，使默认创建的文章按照年月分类\n`new_post_name: :year/:month/:title.md`\n\n```bash\n$ hexo new post test1\nINFO  Validating config\nINFO  Created: ~/Documents/Hexo/source/_posts/2023/05/test1.md\n```\n\n\n\n## 2. 自定义分类\n\n```bash\n$ hexo new post -p 后端/test2\nINFO  Validating config\nINFO  Created: ~/Documents/Hexo/source/_posts/后端/test2.md\n```\n\n# 配置\n\n## 旧文章处理\n\n在 `source/_posts` 文件夹手动分类，重新生成部署即可\n\n# 参考\n\n* [hexo博客文章多了怎么管理](https://blog.csdn.net/weixin_40251892/article/details/107590794)\n\n","slug":"Hexo-Hexo-分类管理md文件","published":1,"updated":"2023-05-25T03:54:43.016Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9lbai30007cgg01pkmft3u","content":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><p>通过 <code>hexo new</code> 创建的文章默认统一在 <code>source/_posts</code> 文件夹下，文章多了之后容易找不到和冲突</p>\n<p>需要更改配置，分类管理文章</p>\n<h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><h2 id=\"1-年月分类\"><a href=\"#1-年月分类\" class=\"headerlink\" title=\"1. 年月分类\"></a>1. 年月分类</h2><p>在<code>_config.yml</code>文件中修改下面的命令，使默认创建的文章按照年月分类<br><code>new_post_name: :year/:month/:title.md</code></p>\n<pre><code class=\"bash\">$ hexo new post test1\nINFO  Validating config\nINFO  Created: ~/Documents/Hexo/source/_posts/2023/05/test1.md\n</code></pre>\n<h2 id=\"2-自定义分类\"><a href=\"#2-自定义分类\" class=\"headerlink\" title=\"2. 自定义分类\"></a>2. 自定义分类</h2><pre><code class=\"bash\">$ hexo new post -p 后端/test2\nINFO  Validating config\nINFO  Created: ~/Documents/Hexo/source/_posts/后端/test2.md\n</code></pre>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><h2 id=\"旧文章处理\"><a href=\"#旧文章处理\" class=\"headerlink\" title=\"旧文章处理\"></a>旧文章处理</h2><p>在 <code>source/_posts</code> 文件夹手动分类，重新生成部署即可</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://blog.csdn.net/weixin_40251892/article/details/107590794\">hexo博客文章多了怎么管理</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><p>通过 <code>hexo new</code> 创建的文章默认统一在 <code>source/_posts</code> 文件夹下，文章多了之后容易找不到和冲突</p>\n<p>需要更改配置，分类管理文章</p>\n<h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><h2 id=\"1-年月分类\"><a href=\"#1-年月分类\" class=\"headerlink\" title=\"1. 年月分类\"></a>1. 年月分类</h2><p>在<code>_config.yml</code>文件中修改下面的命令，使默认创建的文章按照年月分类<br><code>new_post_name: :year/:month/:title.md</code></p>\n<pre><code class=\"bash\">$ hexo new post test1\nINFO  Validating config\nINFO  Created: ~/Documents/Hexo/source/_posts/2023/05/test1.md\n</code></pre>\n<h2 id=\"2-自定义分类\"><a href=\"#2-自定义分类\" class=\"headerlink\" title=\"2. 自定义分类\"></a>2. 自定义分类</h2><pre><code class=\"bash\">$ hexo new post -p 后端/test2\nINFO  Validating config\nINFO  Created: ~/Documents/Hexo/source/_posts/后端/test2.md\n</code></pre>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><h2 id=\"旧文章处理\"><a href=\"#旧文章处理\" class=\"headerlink\" title=\"旧文章处理\"></a>旧文章处理</h2><p>在 <code>source/_posts</code> 文件夹手动分类，重新生成部署即可</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://blog.csdn.net/weixin_40251892/article/details/107590794\">hexo博客文章多了怎么管理</a></li>\n</ul>\n"},{"title":"Hexo-添加看板娘","date":"2023-05-25T07:53:28.000Z","_content":"\n# 低级看板娘安装步骤\n\n没有更多自定义功能\n\n## 1. 安装动画\n\n如果安装过要先卸载 `npm uninstall hexo-helper-live2d`\n\n```bash\n$ npm install --save hexo-helper-live2d\n```\n\n## 2. 安装模型\n\n```bash\n$ npm install live2d-widget-model-模型名称\n```\n\n模型名称可在 `node_modules/live2d-widget/README.md` 找到，推荐 `shizuku`\n\n## 3. 配置\n\n修改 Hexo 的配置文件 `_config.yml`\n\n```yaml\n## Live2D看板娘\nlive2d:\n  enable: true\n  pluginModelPath: assets/\n  model:\n    # 模板目录，在node_modules里\n    use: live2d-widget-model-shizuku  \n  display:\n    position: right\n    width: 300 \n    height: 600\n  mobile:\n    # 在手机端显示\n    show: false   \n  rect:\n    opacity:0.7\n```\n\n重新部署即可\n\n\n\n# 高级看板娘安装步骤\n\n可换装、可拍照、可说话、可互动\n\n## 1. fork 官方仓库\n\n[live2d-widget](https://github.com/stevenjoezhang/live2d-widget)，目的是自定义修改，同时利用 github 的官方 cdn\n\n## 2. 修改文件\n\n- autoload.js：自动加载看板娘；\n- waifu.css：看板娘样式；\n- waifu-tips.js：看板娘说话的脚本；\n- waifu-tips.json：看板娘说话的内容；\n\n### 2.1 修改看板娘加载路径\n\n修改 `autoload.js`\n\n```\n//注意：live2d_path参数应使用绝对路径\nconst live2d_path = \"https://cdn.jsdelivr.net/gh/Mculover666/live2d-widget/\";\n```\n\n> Mculover666 换成自己的 Github 用户名\n\n### 2.2 修改看板娘布局和样式\n\n修改 `waifu.css`\n\n```css\n#waifu {\n\tbottom: -1000px;\n\tright: 0;  // 看板娘位置\n\tline-height: 0;\n\tmargin-bottom: -10px;\n\tposition: fixed;\n\ttransform: translateY(3px);\n\ttransition: transform .3s ease-in-out, bottom 3s ease-in-out;\n\tz-index: 1;\n}\n\n#waifu-tool {\n\tcolor: #aaa;\n\topacity: 0;\n\tposition: absolute;\n\tleft: 10px;  // 看板娘工具栏位置\n\ttop: 70px;\n\ttransition: opacity 1s;\n}\n```\n\n### 2.3 提交到仓库\n\nadd commit push\n\n### 2.4 发布新版本\n\n由于使用了 Github 免费的 CDN 服务，所以还需要发布一个新的版本\n\n![发布 releases ](https://cdn.myshenle.top/images/202305251741064.png)\n\n## 3. 添加看板娘\n\nGithub上CDN的使用方式为\n`https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径`\n\n修改主页文件，添加以下代码\n\n```html\n<script src=\"https://cdn.jsdelivr.net/gh/shenleg/live2d-widget@1.0.0/autoload.js\"></script>\n```\n\n## 4. 复活看板娘\n\n配置主题下的配置文件 `_config.yml` ，添加以下代码\n\n```yaml\n# ---------------------------------------------------------------\n# 自定义看板娘\n# ---------------------------------------------------------------\nlive2d:\n  enable: true\n```\n\n\n\n# 参考\n\n* [【Hexo搭建个人博客】（十二）Next主题中添加超级好玩的看板娘（CDN方式）](https://blog.51cto.com/u_13640625/3032364)\n","source":"_posts/Hexo/Hexo-添加看板娘.md","raw":"---\ntitle: Hexo-添加看板娘\ncategories:\n  - 工具\n  - Hexo\ntags:\n  - hexo\ndate: 2023-05-25 15:53:28\n---\n\n# 低级看板娘安装步骤\n\n没有更多自定义功能\n\n## 1. 安装动画\n\n如果安装过要先卸载 `npm uninstall hexo-helper-live2d`\n\n```bash\n$ npm install --save hexo-helper-live2d\n```\n\n## 2. 安装模型\n\n```bash\n$ npm install live2d-widget-model-模型名称\n```\n\n模型名称可在 `node_modules/live2d-widget/README.md` 找到，推荐 `shizuku`\n\n## 3. 配置\n\n修改 Hexo 的配置文件 `_config.yml`\n\n```yaml\n## Live2D看板娘\nlive2d:\n  enable: true\n  pluginModelPath: assets/\n  model:\n    # 模板目录，在node_modules里\n    use: live2d-widget-model-shizuku  \n  display:\n    position: right\n    width: 300 \n    height: 600\n  mobile:\n    # 在手机端显示\n    show: false   \n  rect:\n    opacity:0.7\n```\n\n重新部署即可\n\n\n\n# 高级看板娘安装步骤\n\n可换装、可拍照、可说话、可互动\n\n## 1. fork 官方仓库\n\n[live2d-widget](https://github.com/stevenjoezhang/live2d-widget)，目的是自定义修改，同时利用 github 的官方 cdn\n\n## 2. 修改文件\n\n- autoload.js：自动加载看板娘；\n- waifu.css：看板娘样式；\n- waifu-tips.js：看板娘说话的脚本；\n- waifu-tips.json：看板娘说话的内容；\n\n### 2.1 修改看板娘加载路径\n\n修改 `autoload.js`\n\n```\n//注意：live2d_path参数应使用绝对路径\nconst live2d_path = \"https://cdn.jsdelivr.net/gh/Mculover666/live2d-widget/\";\n```\n\n> Mculover666 换成自己的 Github 用户名\n\n### 2.2 修改看板娘布局和样式\n\n修改 `waifu.css`\n\n```css\n#waifu {\n\tbottom: -1000px;\n\tright: 0;  // 看板娘位置\n\tline-height: 0;\n\tmargin-bottom: -10px;\n\tposition: fixed;\n\ttransform: translateY(3px);\n\ttransition: transform .3s ease-in-out, bottom 3s ease-in-out;\n\tz-index: 1;\n}\n\n#waifu-tool {\n\tcolor: #aaa;\n\topacity: 0;\n\tposition: absolute;\n\tleft: 10px;  // 看板娘工具栏位置\n\ttop: 70px;\n\ttransition: opacity 1s;\n}\n```\n\n### 2.3 提交到仓库\n\nadd commit push\n\n### 2.4 发布新版本\n\n由于使用了 Github 免费的 CDN 服务，所以还需要发布一个新的版本\n\n![发布 releases ](https://cdn.myshenle.top/images/202305251741064.png)\n\n## 3. 添加看板娘\n\nGithub上CDN的使用方式为\n`https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径`\n\n修改主页文件，添加以下代码\n\n```html\n<script src=\"https://cdn.jsdelivr.net/gh/shenleg/live2d-widget@1.0.0/autoload.js\"></script>\n```\n\n## 4. 复活看板娘\n\n配置主题下的配置文件 `_config.yml` ，添加以下代码\n\n```yaml\n# ---------------------------------------------------------------\n# 自定义看板娘\n# ---------------------------------------------------------------\nlive2d:\n  enable: true\n```\n\n\n\n# 参考\n\n* [【Hexo搭建个人博客】（十二）Next主题中添加超级好玩的看板娘（CDN方式）](https://blog.51cto.com/u_13640625/3032364)\n","slug":"Hexo-Hexo-添加看板娘","published":1,"updated":"2023-05-25T14:45:35.102Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9lbai5000bcgg01ke32pzl","content":"<h1 id=\"低级看板娘安装步骤\"><a href=\"#低级看板娘安装步骤\" class=\"headerlink\" title=\"低级看板娘安装步骤\"></a>低级看板娘安装步骤</h1><p>没有更多自定义功能</p>\n<h2 id=\"1-安装动画\"><a href=\"#1-安装动画\" class=\"headerlink\" title=\"1. 安装动画\"></a>1. 安装动画</h2><p>如果安装过要先卸载 <code>npm uninstall hexo-helper-live2d</code></p>\n<pre><code class=\"bash\">$ npm install --save hexo-helper-live2d\n</code></pre>\n<h2 id=\"2-安装模型\"><a href=\"#2-安装模型\" class=\"headerlink\" title=\"2. 安装模型\"></a>2. 安装模型</h2><pre><code class=\"bash\">$ npm install live2d-widget-model-模型名称\n</code></pre>\n<p>模型名称可在 <code>node_modules/live2d-widget/README.md</code> 找到，推荐 <code>shizuku</code></p>\n<h2 id=\"3-配置\"><a href=\"#3-配置\" class=\"headerlink\" title=\"3. 配置\"></a>3. 配置</h2><p>修改 Hexo 的配置文件 <code>_config.yml</code></p>\n<pre><code class=\"yaml\">## Live2D看板娘\nlive2d:\n  enable: true\n  pluginModelPath: assets/\n  model:\n    # 模板目录，在node_modules里\n    use: live2d-widget-model-shizuku  \n  display:\n    position: right\n    width: 300 \n    height: 600\n  mobile:\n    # 在手机端显示\n    show: false   \n  rect:\n    opacity:0.7\n</code></pre>\n<p>重新部署即可</p>\n<h1 id=\"高级看板娘安装步骤\"><a href=\"#高级看板娘安装步骤\" class=\"headerlink\" title=\"高级看板娘安装步骤\"></a>高级看板娘安装步骤</h1><p>可换装、可拍照、可说话、可互动</p>\n<h2 id=\"1-fork-官方仓库\"><a href=\"#1-fork-官方仓库\" class=\"headerlink\" title=\"1. fork 官方仓库\"></a>1. fork 官方仓库</h2><p><a href=\"https://github.com/stevenjoezhang/live2d-widget\">live2d-widget</a>，目的是自定义修改，同时利用 github 的官方 cdn</p>\n<h2 id=\"2-修改文件\"><a href=\"#2-修改文件\" class=\"headerlink\" title=\"2. 修改文件\"></a>2. 修改文件</h2><ul>\n<li>autoload.js：自动加载看板娘；</li>\n<li>waifu.css：看板娘样式；</li>\n<li>waifu-tips.js：看板娘说话的脚本；</li>\n<li>waifu-tips.json：看板娘说话的内容；</li>\n</ul>\n<h3 id=\"2-1-修改看板娘加载路径\"><a href=\"#2-1-修改看板娘加载路径\" class=\"headerlink\" title=\"2.1 修改看板娘加载路径\"></a>2.1 修改看板娘加载路径</h3><p>修改 <code>autoload.js</code></p>\n<pre><code>//注意：live2d_path参数应使用绝对路径\nconst live2d_path = &quot;https://cdn.jsdelivr.net/gh/Mculover666/live2d-widget/&quot;;\n</code></pre>\n<blockquote>\n<p>Mculover666 换成自己的 Github 用户名</p>\n</blockquote>\n<h3 id=\"2-2-修改看板娘布局和样式\"><a href=\"#2-2-修改看板娘布局和样式\" class=\"headerlink\" title=\"2.2 修改看板娘布局和样式\"></a>2.2 修改看板娘布局和样式</h3><p>修改 <code>waifu.css</code></p>\n<pre><code class=\"css\">#waifu &#123;\n    bottom: -1000px;\n    right: 0;  // 看板娘位置\n    line-height: 0;\n    margin-bottom: -10px;\n    position: fixed;\n    transform: translateY(3px);\n    transition: transform .3s ease-in-out, bottom 3s ease-in-out;\n    z-index: 1;\n&#125;\n\n#waifu-tool &#123;\n    color: #aaa;\n    opacity: 0;\n    position: absolute;\n    left: 10px;  // 看板娘工具栏位置\n    top: 70px;\n    transition: opacity 1s;\n&#125;\n</code></pre>\n<h3 id=\"2-3-提交到仓库\"><a href=\"#2-3-提交到仓库\" class=\"headerlink\" title=\"2.3 提交到仓库\"></a>2.3 提交到仓库</h3><p>add commit push</p>\n<h3 id=\"2-4-发布新版本\"><a href=\"#2-4-发布新版本\" class=\"headerlink\" title=\"2.4 发布新版本\"></a>2.4 发布新版本</h3><p>由于使用了 Github 免费的 CDN 服务，所以还需要发布一个新的版本</p>\n<p><img src=\"https://cdn.myshenle.top/images/202305251741064.png\" alt=\"发布 releases \"></p>\n<h2 id=\"3-添加看板娘\"><a href=\"#3-添加看板娘\" class=\"headerlink\" title=\"3. 添加看板娘\"></a>3. 添加看板娘</h2><p>Github上CDN的使用方式为<br><code>https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径</code></p>\n<p>修改主页文件，添加以下代码</p>\n<pre><code class=\"html\">&lt;script src=&quot;https://cdn.jsdelivr.net/gh/shenleg/live2d-widget@1.0.0/autoload.js&quot;&gt;&lt;/script&gt;\n</code></pre>\n<h2 id=\"4-复活看板娘\"><a href=\"#4-复活看板娘\" class=\"headerlink\" title=\"4. 复活看板娘\"></a>4. 复活看板娘</h2><p>配置主题下的配置文件 <code>_config.yml</code> ，添加以下代码</p>\n<pre><code class=\"yaml\"># ---------------------------------------------------------------\n# 自定义看板娘\n# ---------------------------------------------------------------\nlive2d:\n  enable: true\n</code></pre>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://blog.51cto.com/u_13640625/3032364\">【Hexo搭建个人博客】（十二）Next主题中添加超级好玩的看板娘（CDN方式）</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"低级看板娘安装步骤\"><a href=\"#低级看板娘安装步骤\" class=\"headerlink\" title=\"低级看板娘安装步骤\"></a>低级看板娘安装步骤</h1><p>没有更多自定义功能</p>\n<h2 id=\"1-安装动画\"><a href=\"#1-安装动画\" class=\"headerlink\" title=\"1. 安装动画\"></a>1. 安装动画</h2><p>如果安装过要先卸载 <code>npm uninstall hexo-helper-live2d</code></p>\n<pre><code class=\"bash\">$ npm install --save hexo-helper-live2d\n</code></pre>\n<h2 id=\"2-安装模型\"><a href=\"#2-安装模型\" class=\"headerlink\" title=\"2. 安装模型\"></a>2. 安装模型</h2><pre><code class=\"bash\">$ npm install live2d-widget-model-模型名称\n</code></pre>\n<p>模型名称可在 <code>node_modules/live2d-widget/README.md</code> 找到，推荐 <code>shizuku</code></p>\n<h2 id=\"3-配置\"><a href=\"#3-配置\" class=\"headerlink\" title=\"3. 配置\"></a>3. 配置</h2><p>修改 Hexo 的配置文件 <code>_config.yml</code></p>\n<pre><code class=\"yaml\">## Live2D看板娘\nlive2d:\n  enable: true\n  pluginModelPath: assets/\n  model:\n    # 模板目录，在node_modules里\n    use: live2d-widget-model-shizuku  \n  display:\n    position: right\n    width: 300 \n    height: 600\n  mobile:\n    # 在手机端显示\n    show: false   \n  rect:\n    opacity:0.7\n</code></pre>\n<p>重新部署即可</p>\n<h1 id=\"高级看板娘安装步骤\"><a href=\"#高级看板娘安装步骤\" class=\"headerlink\" title=\"高级看板娘安装步骤\"></a>高级看板娘安装步骤</h1><p>可换装、可拍照、可说话、可互动</p>\n<h2 id=\"1-fork-官方仓库\"><a href=\"#1-fork-官方仓库\" class=\"headerlink\" title=\"1. fork 官方仓库\"></a>1. fork 官方仓库</h2><p><a href=\"https://github.com/stevenjoezhang/live2d-widget\">live2d-widget</a>，目的是自定义修改，同时利用 github 的官方 cdn</p>\n<h2 id=\"2-修改文件\"><a href=\"#2-修改文件\" class=\"headerlink\" title=\"2. 修改文件\"></a>2. 修改文件</h2><ul>\n<li>autoload.js：自动加载看板娘；</li>\n<li>waifu.css：看板娘样式；</li>\n<li>waifu-tips.js：看板娘说话的脚本；</li>\n<li>waifu-tips.json：看板娘说话的内容；</li>\n</ul>\n<h3 id=\"2-1-修改看板娘加载路径\"><a href=\"#2-1-修改看板娘加载路径\" class=\"headerlink\" title=\"2.1 修改看板娘加载路径\"></a>2.1 修改看板娘加载路径</h3><p>修改 <code>autoload.js</code></p>\n<pre><code>//注意：live2d_path参数应使用绝对路径\nconst live2d_path = &quot;https://cdn.jsdelivr.net/gh/Mculover666/live2d-widget/&quot;;\n</code></pre>\n<blockquote>\n<p>Mculover666 换成自己的 Github 用户名</p>\n</blockquote>\n<h3 id=\"2-2-修改看板娘布局和样式\"><a href=\"#2-2-修改看板娘布局和样式\" class=\"headerlink\" title=\"2.2 修改看板娘布局和样式\"></a>2.2 修改看板娘布局和样式</h3><p>修改 <code>waifu.css</code></p>\n<pre><code class=\"css\">#waifu &#123;\n    bottom: -1000px;\n    right: 0;  // 看板娘位置\n    line-height: 0;\n    margin-bottom: -10px;\n    position: fixed;\n    transform: translateY(3px);\n    transition: transform .3s ease-in-out, bottom 3s ease-in-out;\n    z-index: 1;\n&#125;\n\n#waifu-tool &#123;\n    color: #aaa;\n    opacity: 0;\n    position: absolute;\n    left: 10px;  // 看板娘工具栏位置\n    top: 70px;\n    transition: opacity 1s;\n&#125;\n</code></pre>\n<h3 id=\"2-3-提交到仓库\"><a href=\"#2-3-提交到仓库\" class=\"headerlink\" title=\"2.3 提交到仓库\"></a>2.3 提交到仓库</h3><p>add commit push</p>\n<h3 id=\"2-4-发布新版本\"><a href=\"#2-4-发布新版本\" class=\"headerlink\" title=\"2.4 发布新版本\"></a>2.4 发布新版本</h3><p>由于使用了 Github 免费的 CDN 服务，所以还需要发布一个新的版本</p>\n<p><img src=\"https://cdn.myshenle.top/images/202305251741064.png\" alt=\"发布 releases \"></p>\n<h2 id=\"3-添加看板娘\"><a href=\"#3-添加看板娘\" class=\"headerlink\" title=\"3. 添加看板娘\"></a>3. 添加看板娘</h2><p>Github上CDN的使用方式为<br><code>https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径</code></p>\n<p>修改主页文件，添加以下代码</p>\n<pre><code class=\"html\">&lt;script src=&quot;https://cdn.jsdelivr.net/gh/shenleg/live2d-widget@1.0.0/autoload.js&quot;&gt;&lt;/script&gt;\n</code></pre>\n<h2 id=\"4-复活看板娘\"><a href=\"#4-复活看板娘\" class=\"headerlink\" title=\"4. 复活看板娘\"></a>4. 复活看板娘</h2><p>配置主题下的配置文件 <code>_config.yml</code> ，添加以下代码</p>\n<pre><code class=\"yaml\"># ---------------------------------------------------------------\n# 自定义看板娘\n# ---------------------------------------------------------------\nlive2d:\n  enable: true\n</code></pre>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://blog.51cto.com/u_13640625/3032364\">【Hexo搭建个人博客】（十二）Next主题中添加超级好玩的看板娘（CDN方式）</a></li>\n</ul>\n"},{"title":"Hexo-数据备份","date":"2023-05-25T07:53:28.000Z","_content":"\n# 需求\n\n防止博客原始数据丢失。\n\n博客内容已上传到 Github Page（不重要，有原始数据就可以再生成），需要备份博客原始数据。\n\n# 步骤\n\n## 1. 初始化 git 仓库\n\n在博客根目录下初始化 git 仓库\n\n\n## 2. 配置 git 仓库\n\n不需要备份所有文件，创建 `.gitignore` 排除文件\n\n```\n.DS_Store\n*.log\ndb.json\n\n.deploy_git/\n.git/\n.github/\n\nnode_modules/\npublic/\n```\n\nGithub 和 Gitee 创建备份仓库，双重备份\n\n添加两个远程仓库，参考《Git-一份代码同时提交两个仓库》\n\n## 3. 配置命令别名\n\n写入到配置文件中，生效一下\n\n```\nalias hn='hexo new post'\nalias hs='hexo clean && hexo g && hexo s --debug'\nalias hd='hexo clean && hexo g && hexo d && git add . && git commit -m \"update\" && git push -f'\n```\n\n## 4. 测试\n\n此时执行 hd 命令即可：部署博客&备份博客原始数据\n\n妈妈再也不用担心我的博客丢失啦\n\nTODO：markdown 中的外链也需要定期备份\n\n","source":"_posts/Hexo/Hexo-数据备份.md","raw":"---\ntitle: Hexo-数据备份\ncategories:\n  - 工具\n  - Hexo\ntags:\n  - hexo\ndate: 2023-05-25 15:53:28\n---\n\n# 需求\n\n防止博客原始数据丢失。\n\n博客内容已上传到 Github Page（不重要，有原始数据就可以再生成），需要备份博客原始数据。\n\n# 步骤\n\n## 1. 初始化 git 仓库\n\n在博客根目录下初始化 git 仓库\n\n\n## 2. 配置 git 仓库\n\n不需要备份所有文件，创建 `.gitignore` 排除文件\n\n```\n.DS_Store\n*.log\ndb.json\n\n.deploy_git/\n.git/\n.github/\n\nnode_modules/\npublic/\n```\n\nGithub 和 Gitee 创建备份仓库，双重备份\n\n添加两个远程仓库，参考《Git-一份代码同时提交两个仓库》\n\n## 3. 配置命令别名\n\n写入到配置文件中，生效一下\n\n```\nalias hn='hexo new post'\nalias hs='hexo clean && hexo g && hexo s --debug'\nalias hd='hexo clean && hexo g && hexo d && git add . && git commit -m \"update\" && git push -f'\n```\n\n## 4. 测试\n\n此时执行 hd 命令即可：部署博客&备份博客原始数据\n\n妈妈再也不用担心我的博客丢失啦\n\nTODO：markdown 中的外链也需要定期备份\n\n","slug":"Hexo-Hexo-数据备份","published":1,"updated":"2023-05-29T17:31:52.766Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9lbai6000ccgg0cjwacadi","content":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><p>防止博客原始数据丢失。</p>\n<p>博客内容已上传到 Github Page（不重要，有原始数据就可以再生成），需要备份博客原始数据。</p>\n<h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><h2 id=\"1-初始化-git-仓库\"><a href=\"#1-初始化-git-仓库\" class=\"headerlink\" title=\"1. 初始化 git 仓库\"></a>1. 初始化 git 仓库</h2><p>在博客根目录下初始化 git 仓库</p>\n<h2 id=\"2-配置-git-仓库\"><a href=\"#2-配置-git-仓库\" class=\"headerlink\" title=\"2. 配置 git 仓库\"></a>2. 配置 git 仓库</h2><p>不需要备份所有文件，创建 <code>.gitignore</code> 排除文件</p>\n<pre><code>.DS_Store\n*.log\ndb.json\n\n.deploy_git/\n.git/\n.github/\n\nnode_modules/\npublic/\n</code></pre>\n<p>Github 和 Gitee 创建备份仓库，双重备份</p>\n<p>添加两个远程仓库，参考《Git-一份代码同时提交两个仓库》</p>\n<h2 id=\"3-配置命令别名\"><a href=\"#3-配置命令别名\" class=\"headerlink\" title=\"3. 配置命令别名\"></a>3. 配置命令别名</h2><p>写入到配置文件中，生效一下</p>\n<pre><code>alias hn=&#39;hexo new post&#39;\nalias hs=&#39;hexo clean &amp;&amp; hexo g &amp;&amp; hexo s --debug&#39;\nalias hd=&#39;hexo clean &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; git add . &amp;&amp; git commit -m &quot;update&quot; &amp;&amp; git push -f&#39;\n</code></pre>\n<h2 id=\"4-测试\"><a href=\"#4-测试\" class=\"headerlink\" title=\"4. 测试\"></a>4. 测试</h2><p>此时执行 hd 命令即可：部署博客&amp;备份博客原始数据</p>\n<p>妈妈再也不用担心我的博客丢失啦</p>\n<p>TODO：markdown 中的外链也需要定期备份</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><p>防止博客原始数据丢失。</p>\n<p>博客内容已上传到 Github Page（不重要，有原始数据就可以再生成），需要备份博客原始数据。</p>\n<h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><h2 id=\"1-初始化-git-仓库\"><a href=\"#1-初始化-git-仓库\" class=\"headerlink\" title=\"1. 初始化 git 仓库\"></a>1. 初始化 git 仓库</h2><p>在博客根目录下初始化 git 仓库</p>\n<h2 id=\"2-配置-git-仓库\"><a href=\"#2-配置-git-仓库\" class=\"headerlink\" title=\"2. 配置 git 仓库\"></a>2. 配置 git 仓库</h2><p>不需要备份所有文件，创建 <code>.gitignore</code> 排除文件</p>\n<pre><code>.DS_Store\n*.log\ndb.json\n\n.deploy_git/\n.git/\n.github/\n\nnode_modules/\npublic/\n</code></pre>\n<p>Github 和 Gitee 创建备份仓库，双重备份</p>\n<p>添加两个远程仓库，参考《Git-一份代码同时提交两个仓库》</p>\n<h2 id=\"3-配置命令别名\"><a href=\"#3-配置命令别名\" class=\"headerlink\" title=\"3. 配置命令别名\"></a>3. 配置命令别名</h2><p>写入到配置文件中，生效一下</p>\n<pre><code>alias hn=&#39;hexo new post&#39;\nalias hs=&#39;hexo clean &amp;&amp; hexo g &amp;&amp; hexo s --debug&#39;\nalias hd=&#39;hexo clean &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; git add . &amp;&amp; git commit -m &quot;update&quot; &amp;&amp; git push -f&#39;\n</code></pre>\n<h2 id=\"4-测试\"><a href=\"#4-测试\" class=\"headerlink\" title=\"4. 测试\"></a>4. 测试</h2><p>此时执行 hd 命令即可：部署博客&amp;备份博客原始数据</p>\n<p>妈妈再也不用担心我的博客丢失啦</p>\n<p>TODO：markdown 中的外链也需要定期备份</p>\n"},{"title":"七牛云备份","date":"2023-05-25T16:32:28.000Z","_content":"\n# 需求\n\nMarkdown 的图片都是外链形式，存储在七牛云上（每月免费 10G 流量）\n\n为了安全，需要备份图片\n\n# 步骤\n\n## 1. 下载 qshell\n\n[qiniu/qshell](https://github.com/qiniu/qshell) 是利用七牛文档上公开的API实现的一个方便开发者测试和使用七牛API服务的命令行工具\n\n配置环境变量\n\n## 2. 配置 qshell\n\n用户目录新建配置文件 ~/.qshell.json\n\n```json\n{\n\t\"access_key\": \"XXXXX\",\n\t\"secret_key\": \"XXXXX\",\n\t\"bucket\": \"xxxx\",\n\t\"domain\": \"cdn.xxx.com\",\n\t\"dest_dir\": \"/Users/collin/Documents/Backup/Qiniu\"\n}\n```\n\n* access_key 和 secret_key：七牛云的访问 key，在右上角头像 -> 秘钥管理\n* bucket：空间名\n* domain：CDN 加速域名\n* dest_dir：备份文件夹路径\n\n## 3. 备份\n\n`qdownload`：从七牛空间同步数据到本地，支持只同步某些前缀的文件，支持增量同步（配置式）\n\n```bash\n$ qshell qdownload ~/.qshell.json\n\n[I]  Downloading: images/202206231712647.png\t38882\n...\n[I]  -------Download Result-------\n[I]      Total:        82\n[I]    Skipped:         0\n[I]     Exists:         0\n[I]    Success:        82\n[I]     Update:         0\n[I]    Failure:         0\n[I]   Duration:        10s\n[I]  -----------------------------\n[I]  See download log at path\n```\n\n","source":"_posts/Hexo/七牛云备份.md","raw":"---\ntitle: 七牛云备份\ncategories:\n  - 工具\n  - Hexo\ntags:\n  - Hexo\ndate: 2023-05-26 00:32:28\n---\n\n# 需求\n\nMarkdown 的图片都是外链形式，存储在七牛云上（每月免费 10G 流量）\n\n为了安全，需要备份图片\n\n# 步骤\n\n## 1. 下载 qshell\n\n[qiniu/qshell](https://github.com/qiniu/qshell) 是利用七牛文档上公开的API实现的一个方便开发者测试和使用七牛API服务的命令行工具\n\n配置环境变量\n\n## 2. 配置 qshell\n\n用户目录新建配置文件 ~/.qshell.json\n\n```json\n{\n\t\"access_key\": \"XXXXX\",\n\t\"secret_key\": \"XXXXX\",\n\t\"bucket\": \"xxxx\",\n\t\"domain\": \"cdn.xxx.com\",\n\t\"dest_dir\": \"/Users/collin/Documents/Backup/Qiniu\"\n}\n```\n\n* access_key 和 secret_key：七牛云的访问 key，在右上角头像 -> 秘钥管理\n* bucket：空间名\n* domain：CDN 加速域名\n* dest_dir：备份文件夹路径\n\n## 3. 备份\n\n`qdownload`：从七牛空间同步数据到本地，支持只同步某些前缀的文件，支持增量同步（配置式）\n\n```bash\n$ qshell qdownload ~/.qshell.json\n\n[I]  Downloading: images/202206231712647.png\t38882\n...\n[I]  -------Download Result-------\n[I]      Total:        82\n[I]    Skipped:         0\n[I]     Exists:         0\n[I]    Success:        82\n[I]     Update:         0\n[I]    Failure:         0\n[I]   Duration:        10s\n[I]  -----------------------------\n[I]  See download log at path\n```\n\n","slug":"Hexo-七牛云备份","published":1,"updated":"2023-05-29T17:32:43.920Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9lbai7000gcgg05y84764e","content":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><p>Markdown 的图片都是外链形式，存储在七牛云上（每月免费 10G 流量）</p>\n<p>为了安全，需要备份图片</p>\n<h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><h2 id=\"1-下载-qshell\"><a href=\"#1-下载-qshell\" class=\"headerlink\" title=\"1. 下载 qshell\"></a>1. 下载 qshell</h2><p><a href=\"https://github.com/qiniu/qshell\">qiniu&#x2F;qshell</a> 是利用七牛文档上公开的API实现的一个方便开发者测试和使用七牛API服务的命令行工具</p>\n<p>配置环境变量</p>\n<h2 id=\"2-配置-qshell\"><a href=\"#2-配置-qshell\" class=\"headerlink\" title=\"2. 配置 qshell\"></a>2. 配置 qshell</h2><p>用户目录新建配置文件 ~&#x2F;.qshell.json</p>\n<pre><code class=\"json\">&#123;\n    &quot;access_key&quot;: &quot;XXXXX&quot;,\n    &quot;secret_key&quot;: &quot;XXXXX&quot;,\n    &quot;bucket&quot;: &quot;xxxx&quot;,\n    &quot;domain&quot;: &quot;cdn.xxx.com&quot;,\n    &quot;dest_dir&quot;: &quot;/Users/collin/Documents/Backup/Qiniu&quot;\n&#125;\n</code></pre>\n<ul>\n<li>access_key 和 secret_key：七牛云的访问 key，在右上角头像 -&gt; 秘钥管理</li>\n<li>bucket：空间名</li>\n<li>domain：CDN 加速域名</li>\n<li>dest_dir：备份文件夹路径</li>\n</ul>\n<h2 id=\"3-备份\"><a href=\"#3-备份\" class=\"headerlink\" title=\"3. 备份\"></a>3. 备份</h2><p><code>qdownload</code>：从七牛空间同步数据到本地，支持只同步某些前缀的文件，支持增量同步（配置式）</p>\n<pre><code class=\"bash\">$ qshell qdownload ~/.qshell.json\n\n[I]  Downloading: images/202206231712647.png\t38882\n...\n[I]  -------Download Result-------\n[I]      Total:        82\n[I]    Skipped:         0\n[I]     Exists:         0\n[I]    Success:        82\n[I]     Update:         0\n[I]    Failure:         0\n[I]   Duration:        10s\n[I]  -----------------------------\n[I]  See download log at path\n</code></pre>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><p>Markdown 的图片都是外链形式，存储在七牛云上（每月免费 10G 流量）</p>\n<p>为了安全，需要备份图片</p>\n<h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><h2 id=\"1-下载-qshell\"><a href=\"#1-下载-qshell\" class=\"headerlink\" title=\"1. 下载 qshell\"></a>1. 下载 qshell</h2><p><a href=\"https://github.com/qiniu/qshell\">qiniu&#x2F;qshell</a> 是利用七牛文档上公开的API实现的一个方便开发者测试和使用七牛API服务的命令行工具</p>\n<p>配置环境变量</p>\n<h2 id=\"2-配置-qshell\"><a href=\"#2-配置-qshell\" class=\"headerlink\" title=\"2. 配置 qshell\"></a>2. 配置 qshell</h2><p>用户目录新建配置文件 ~&#x2F;.qshell.json</p>\n<pre><code class=\"json\">&#123;\n    &quot;access_key&quot;: &quot;XXXXX&quot;,\n    &quot;secret_key&quot;: &quot;XXXXX&quot;,\n    &quot;bucket&quot;: &quot;xxxx&quot;,\n    &quot;domain&quot;: &quot;cdn.xxx.com&quot;,\n    &quot;dest_dir&quot;: &quot;/Users/collin/Documents/Backup/Qiniu&quot;\n&#125;\n</code></pre>\n<ul>\n<li>access_key 和 secret_key：七牛云的访问 key，在右上角头像 -&gt; 秘钥管理</li>\n<li>bucket：空间名</li>\n<li>domain：CDN 加速域名</li>\n<li>dest_dir：备份文件夹路径</li>\n</ul>\n<h2 id=\"3-备份\"><a href=\"#3-备份\" class=\"headerlink\" title=\"3. 备份\"></a>3. 备份</h2><p><code>qdownload</code>：从七牛空间同步数据到本地，支持只同步某些前缀的文件，支持增量同步（配置式）</p>\n<pre><code class=\"bash\">$ qshell qdownload ~/.qshell.json\n\n[I]  Downloading: images/202206231712647.png\t38882\n...\n[I]  -------Download Result-------\n[I]      Total:        82\n[I]    Skipped:         0\n[I]     Exists:         0\n[I]    Success:        82\n[I]     Update:         0\n[I]    Failure:         0\n[I]   Duration:        10s\n[I]  -----------------------------\n[I]  See download log at path\n</code></pre>\n"},{"title":"Jenkins-Gitlab构建配置","date":"2023-05-25T02:58:19.000Z","_content":"\n# 需求\n\n推送代码、合并代码即可构建应用，不需要进入页面手动点击\n\n# 步骤\n\n## 1. Jenkins 配置\n\n### 1.1 安装插件\n\ngitlab\n\n### 1.2 job 配置\n\n被触发构建的项目 -> 构建触发器 -> Build when a change is pushed to GitLab 勾选\n\n![](https://cdn.myshenle.top/images/202210241508278.png)\n\n往下拉，高级设置：\n\n![](https://cdn.myshenle.top/images/202210241510419.png)\n\n此处可过滤分支 `Allowed branches`\n\n## 2. Gitlab 配置\n\n### 2.1 项目配置\n\n触发构建的项目 -> Setting -> Webhooks -> Add webhook\n\n![webhook 设置](https://cdn.myshenle.top/images/202210241544320.png)\n\n\n### 异常情况\n\n如果 jenkins 和 gitlab 都在同一台服务器上，可能会弹出警告阻止添加\n\n![异常警告](https://cdn.myshenle.top/images/202210241700683.png)\n\n需要设置允许本地 webhook，修改完后需要再次 Add webhook\n\n![设置允许本地 webhook](https://cdn.myshenle.top/images/202210241549052.png)\n\n## 3. 测试\n\n模拟推送事件\n\n![推送测试](https://cdn.myshenle.top/images/202210241703013.png)\n\n![成功提示](https://cdn.myshenle.top/images/202210241702712.png)\n\n查看 Jenkins\n\n![成功运行](https://cdn.myshenle.top/images/202210241704772.png)\n\n# 参考\n\n* [Gitlab触发jenkins构建](https://blog.csdn.net/ownfire/article/details/124766548)\n","source":"_posts/Jenkins/Jenkins-Gitlab构建配置.md","raw":"---\ntitle: Jenkins-Gitlab构建配置\ncategories:\n  - 工具\n  - Jenkins\ntags:\n  - Jenkins\ndate: 2023-05-25 10:58:19\n---\n\n# 需求\n\n推送代码、合并代码即可构建应用，不需要进入页面手动点击\n\n# 步骤\n\n## 1. Jenkins 配置\n\n### 1.1 安装插件\n\ngitlab\n\n### 1.2 job 配置\n\n被触发构建的项目 -> 构建触发器 -> Build when a change is pushed to GitLab 勾选\n\n![](https://cdn.myshenle.top/images/202210241508278.png)\n\n往下拉，高级设置：\n\n![](https://cdn.myshenle.top/images/202210241510419.png)\n\n此处可过滤分支 `Allowed branches`\n\n## 2. Gitlab 配置\n\n### 2.1 项目配置\n\n触发构建的项目 -> Setting -> Webhooks -> Add webhook\n\n![webhook 设置](https://cdn.myshenle.top/images/202210241544320.png)\n\n\n### 异常情况\n\n如果 jenkins 和 gitlab 都在同一台服务器上，可能会弹出警告阻止添加\n\n![异常警告](https://cdn.myshenle.top/images/202210241700683.png)\n\n需要设置允许本地 webhook，修改完后需要再次 Add webhook\n\n![设置允许本地 webhook](https://cdn.myshenle.top/images/202210241549052.png)\n\n## 3. 测试\n\n模拟推送事件\n\n![推送测试](https://cdn.myshenle.top/images/202210241703013.png)\n\n![成功提示](https://cdn.myshenle.top/images/202210241702712.png)\n\n查看 Jenkins\n\n![成功运行](https://cdn.myshenle.top/images/202210241704772.png)\n\n# 参考\n\n* [Gitlab触发jenkins构建](https://blog.csdn.net/ownfire/article/details/124766548)\n","slug":"Jenkins-Jenkins-Gitlab构建配置","published":1,"updated":"2023-05-25T16:18:11.996Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9lbai7000hcgg0f9260pzw","content":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><p>推送代码、合并代码即可构建应用，不需要进入页面手动点击</p>\n<h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><h2 id=\"1-Jenkins-配置\"><a href=\"#1-Jenkins-配置\" class=\"headerlink\" title=\"1. Jenkins 配置\"></a>1. Jenkins 配置</h2><h3 id=\"1-1-安装插件\"><a href=\"#1-1-安装插件\" class=\"headerlink\" title=\"1.1 安装插件\"></a>1.1 安装插件</h3><p>gitlab</p>\n<h3 id=\"1-2-job-配置\"><a href=\"#1-2-job-配置\" class=\"headerlink\" title=\"1.2 job 配置\"></a>1.2 job 配置</h3><p>被触发构建的项目 -&gt; 构建触发器 -&gt; Build when a change is pushed to GitLab 勾选</p>\n<p><img src=\"https://cdn.myshenle.top/images/202210241508278.png\"></p>\n<p>往下拉，高级设置：</p>\n<p><img src=\"https://cdn.myshenle.top/images/202210241510419.png\"></p>\n<p>此处可过滤分支 <code>Allowed branches</code></p>\n<h2 id=\"2-Gitlab-配置\"><a href=\"#2-Gitlab-配置\" class=\"headerlink\" title=\"2. Gitlab 配置\"></a>2. Gitlab 配置</h2><h3 id=\"2-1-项目配置\"><a href=\"#2-1-项目配置\" class=\"headerlink\" title=\"2.1 项目配置\"></a>2.1 项目配置</h3><p>触发构建的项目 -&gt; Setting -&gt; Webhooks -&gt; Add webhook</p>\n<p><img src=\"https://cdn.myshenle.top/images/202210241544320.png\" alt=\"webhook 设置\"></p>\n<h3 id=\"异常情况\"><a href=\"#异常情况\" class=\"headerlink\" title=\"异常情况\"></a>异常情况</h3><p>如果 jenkins 和 gitlab 都在同一台服务器上，可能会弹出警告阻止添加</p>\n<p><img src=\"https://cdn.myshenle.top/images/202210241700683.png\" alt=\"异常警告\"></p>\n<p>需要设置允许本地 webhook，修改完后需要再次 Add webhook</p>\n<p><img src=\"https://cdn.myshenle.top/images/202210241549052.png\" alt=\"设置允许本地 webhook\"></p>\n<h2 id=\"3-测试\"><a href=\"#3-测试\" class=\"headerlink\" title=\"3. 测试\"></a>3. 测试</h2><p>模拟推送事件</p>\n<p><img src=\"https://cdn.myshenle.top/images/202210241703013.png\" alt=\"推送测试\"></p>\n<p><img src=\"https://cdn.myshenle.top/images/202210241702712.png\" alt=\"成功提示\"></p>\n<p>查看 Jenkins</p>\n<p><img src=\"https://cdn.myshenle.top/images/202210241704772.png\" alt=\"成功运行\"></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://blog.csdn.net/ownfire/article/details/124766548\">Gitlab触发jenkins构建</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><p>推送代码、合并代码即可构建应用，不需要进入页面手动点击</p>\n<h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><h2 id=\"1-Jenkins-配置\"><a href=\"#1-Jenkins-配置\" class=\"headerlink\" title=\"1. Jenkins 配置\"></a>1. Jenkins 配置</h2><h3 id=\"1-1-安装插件\"><a href=\"#1-1-安装插件\" class=\"headerlink\" title=\"1.1 安装插件\"></a>1.1 安装插件</h3><p>gitlab</p>\n<h3 id=\"1-2-job-配置\"><a href=\"#1-2-job-配置\" class=\"headerlink\" title=\"1.2 job 配置\"></a>1.2 job 配置</h3><p>被触发构建的项目 -&gt; 构建触发器 -&gt; Build when a change is pushed to GitLab 勾选</p>\n<p><img src=\"https://cdn.myshenle.top/images/202210241508278.png\"></p>\n<p>往下拉，高级设置：</p>\n<p><img src=\"https://cdn.myshenle.top/images/202210241510419.png\"></p>\n<p>此处可过滤分支 <code>Allowed branches</code></p>\n<h2 id=\"2-Gitlab-配置\"><a href=\"#2-Gitlab-配置\" class=\"headerlink\" title=\"2. Gitlab 配置\"></a>2. Gitlab 配置</h2><h3 id=\"2-1-项目配置\"><a href=\"#2-1-项目配置\" class=\"headerlink\" title=\"2.1 项目配置\"></a>2.1 项目配置</h3><p>触发构建的项目 -&gt; Setting -&gt; Webhooks -&gt; Add webhook</p>\n<p><img src=\"https://cdn.myshenle.top/images/202210241544320.png\" alt=\"webhook 设置\"></p>\n<h3 id=\"异常情况\"><a href=\"#异常情况\" class=\"headerlink\" title=\"异常情况\"></a>异常情况</h3><p>如果 jenkins 和 gitlab 都在同一台服务器上，可能会弹出警告阻止添加</p>\n<p><img src=\"https://cdn.myshenle.top/images/202210241700683.png\" alt=\"异常警告\"></p>\n<p>需要设置允许本地 webhook，修改完后需要再次 Add webhook</p>\n<p><img src=\"https://cdn.myshenle.top/images/202210241549052.png\" alt=\"设置允许本地 webhook\"></p>\n<h2 id=\"3-测试\"><a href=\"#3-测试\" class=\"headerlink\" title=\"3. 测试\"></a>3. 测试</h2><p>模拟推送事件</p>\n<p><img src=\"https://cdn.myshenle.top/images/202210241703013.png\" alt=\"推送测试\"></p>\n<p><img src=\"https://cdn.myshenle.top/images/202210241702712.png\" alt=\"成功提示\"></p>\n<p>查看 Jenkins</p>\n<p><img src=\"https://cdn.myshenle.top/images/202210241704772.png\" alt=\"成功运行\"></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://blog.csdn.net/ownfire/article/details/124766548\">Gitlab触发jenkins构建</a></li>\n</ul>\n"},{"title":"Jenkins-模版","top":1,"date":"2023-05-25T02:57:58.000Z","_content":"\n# 需求\n\n# 步骤\n\n# 参考\n","source":"_posts/Jenkins/Jenkins-模版.md","raw":"---\ntitle: Jenkins-模版\ncategories:\n  - 工具\n  - Jenkins\ntags:\n  - Jenkins\ntop: 1\ndate: 2023-05-25 10:57:58\n---\n\n# 需求\n\n# 步骤\n\n# 参考\n","slug":"Jenkins-Jenkins-模版","published":1,"updated":"2023-05-26T04:59:34.031Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9lbai8000kcgg010ludg4w","content":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1>"},{"title":"Jenkins-远程构建配置","date":"2023-05-25T02:57:58.000Z","_content":"\n# 需求\n\n通过 Http 请求即可构建应用，不需要进入页面手动点击，支持参数构建\n\n# 步骤\n\n## 1. job 配置\n\n![远程构建配置](https://cdn.myshenle.top/images/202305251103963.png)\n\n## 2. 调用测试\n\n可直接在浏览器地址栏输入调用\n\n* 无参数：`JENKINS_URL/job/test/build?token=TOKEN`\n* 有参数：`JENKINS_URL/job/test/buildWithParameters?token=TOKEN&param1=value1`\n\n`JENKINS_URL` 为 Jenkins 访问地址\n\n# 配置\n\n## 匿名用户权限\n\n不需要登录即可构建，配置匿名用户的调用权限\n\n进入：系统设置 -> 全局安全配置\n\n![匿名用户权限配置](https://cdn.myshenle.top/images/202305251120076.png)\n\n# 参考\n\n* [JENKINS触发远程构建功能使用](https://www.jianshu.com/p/aa0dc1157599)\n\n","source":"_posts/Jenkins/Jenkins-远程构建配置.md","raw":"---\ntitle: Jenkins-远程构建配置\ncategories:\n  - 工具\n  - Jenkins\ntags:\n  - Jenkins\ndate: 2023-05-25 10:57:58\n---\n\n# 需求\n\n通过 Http 请求即可构建应用，不需要进入页面手动点击，支持参数构建\n\n# 步骤\n\n## 1. job 配置\n\n![远程构建配置](https://cdn.myshenle.top/images/202305251103963.png)\n\n## 2. 调用测试\n\n可直接在浏览器地址栏输入调用\n\n* 无参数：`JENKINS_URL/job/test/build?token=TOKEN`\n* 有参数：`JENKINS_URL/job/test/buildWithParameters?token=TOKEN&param1=value1`\n\n`JENKINS_URL` 为 Jenkins 访问地址\n\n# 配置\n\n## 匿名用户权限\n\n不需要登录即可构建，配置匿名用户的调用权限\n\n进入：系统设置 -> 全局安全配置\n\n![匿名用户权限配置](https://cdn.myshenle.top/images/202305251120076.png)\n\n# 参考\n\n* [JENKINS触发远程构建功能使用](https://www.jianshu.com/p/aa0dc1157599)\n\n","slug":"Jenkins-Jenkins-远程构建配置","published":1,"updated":"2023-05-25T03:52:46.841Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9lbai9000mcgg05ogn5re6","content":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><p>通过 Http 请求即可构建应用，不需要进入页面手动点击，支持参数构建</p>\n<h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><h2 id=\"1-job-配置\"><a href=\"#1-job-配置\" class=\"headerlink\" title=\"1. job 配置\"></a>1. job 配置</h2><p><img src=\"https://cdn.myshenle.top/images/202305251103963.png\" alt=\"远程构建配置\"></p>\n<h2 id=\"2-调用测试\"><a href=\"#2-调用测试\" class=\"headerlink\" title=\"2. 调用测试\"></a>2. 调用测试</h2><p>可直接在浏览器地址栏输入调用</p>\n<ul>\n<li>无参数：<code>JENKINS_URL/job/test/build?token=TOKEN</code></li>\n<li>有参数：<code>JENKINS_URL/job/test/buildWithParameters?token=TOKEN&amp;param1=value1</code></li>\n</ul>\n<p><code>JENKINS_URL</code> 为 Jenkins 访问地址</p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><h2 id=\"匿名用户权限\"><a href=\"#匿名用户权限\" class=\"headerlink\" title=\"匿名用户权限\"></a>匿名用户权限</h2><p>不需要登录即可构建，配置匿名用户的调用权限</p>\n<p>进入：系统设置 -&gt; 全局安全配置</p>\n<p><img src=\"https://cdn.myshenle.top/images/202305251120076.png\" alt=\"匿名用户权限配置\"></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://www.jianshu.com/p/aa0dc1157599\">JENKINS触发远程构建功能使用</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><p>通过 Http 请求即可构建应用，不需要进入页面手动点击，支持参数构建</p>\n<h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><h2 id=\"1-job-配置\"><a href=\"#1-job-配置\" class=\"headerlink\" title=\"1. job 配置\"></a>1. job 配置</h2><p><img src=\"https://cdn.myshenle.top/images/202305251103963.png\" alt=\"远程构建配置\"></p>\n<h2 id=\"2-调用测试\"><a href=\"#2-调用测试\" class=\"headerlink\" title=\"2. 调用测试\"></a>2. 调用测试</h2><p>可直接在浏览器地址栏输入调用</p>\n<ul>\n<li>无参数：<code>JENKINS_URL/job/test/build?token=TOKEN</code></li>\n<li>有参数：<code>JENKINS_URL/job/test/buildWithParameters?token=TOKEN&amp;param1=value1</code></li>\n</ul>\n<p><code>JENKINS_URL</code> 为 Jenkins 访问地址</p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><h2 id=\"匿名用户权限\"><a href=\"#匿名用户权限\" class=\"headerlink\" title=\"匿名用户权限\"></a>匿名用户权限</h2><p>不需要登录即可构建，配置匿名用户的调用权限</p>\n<p>进入：系统设置 -&gt; 全局安全配置</p>\n<p><img src=\"https://cdn.myshenle.top/images/202305251120076.png\" alt=\"匿名用户权限配置\"></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://www.jianshu.com/p/aa0dc1157599\">JENKINS触发远程构建功能使用</a></li>\n</ul>\n"},{"title":"Jenkins-重置管理员密码","date":"2023-05-25T01:52:37.000Z","_content":"\n# 需求\n\nJenkins admin 用户忘记密码，需要重置密码\n\n# 步骤\n\n## 1. 修改配置文件\n\n修改 Jenkins 目录的 `config.xml`文件，通常在 `~/.jenkins/config.xml`\n\n修改 `useSecurity` 字段为 `false`，然后重新启动 Jenkins。你就会发现不需要登陆也能进入管理页面。\n\n重启 Jenkins\n\n## 2. 修改 Jenkins 配置\n\n直接进入 Jenkins 后台 -> 系统管理 -> 全局安全配置\n\n此操作可出现 `管理用户` 模块\n\n![全局安全配置](https://cdn.myshenle.top/images/202305251012933.png)\n\n## 3. 修改密码\n\n直接进入 Jenkins 后台 -> 系统管理 -> 管理用户\n\n![重置用户密码](https://cdn.myshenle.top/images/202305251021368.png)\n\n恢复 `Jenkins` 配置（自动设置 `config.xml` ），重启 Jenkins，登录验证\n\n![恢复 Jenkins 配置](https://cdn.myshenle.top/images/202305251045781.png)\n\n# 参考\n\n* [Jenkins 官方](https://www.jenkins-zh.cn/tutorial/management/auth/lost-password/)\n* [Jenkins之忘记管理员账户密码重置方法](https://blog.csdn.net/carefree2005/article/details/112169302)\n","source":"_posts/Jenkins/Jenkins-重置管理员密码.md","raw":"---\ntitle: Jenkins-重置管理员密码\ncategories:\n  - 工具\n  - Jenkins\ntags:\n  - Jenkins\ndate: 2023-05-25 09:52:37\n---\n\n# 需求\n\nJenkins admin 用户忘记密码，需要重置密码\n\n# 步骤\n\n## 1. 修改配置文件\n\n修改 Jenkins 目录的 `config.xml`文件，通常在 `~/.jenkins/config.xml`\n\n修改 `useSecurity` 字段为 `false`，然后重新启动 Jenkins。你就会发现不需要登陆也能进入管理页面。\n\n重启 Jenkins\n\n## 2. 修改 Jenkins 配置\n\n直接进入 Jenkins 后台 -> 系统管理 -> 全局安全配置\n\n此操作可出现 `管理用户` 模块\n\n![全局安全配置](https://cdn.myshenle.top/images/202305251012933.png)\n\n## 3. 修改密码\n\n直接进入 Jenkins 后台 -> 系统管理 -> 管理用户\n\n![重置用户密码](https://cdn.myshenle.top/images/202305251021368.png)\n\n恢复 `Jenkins` 配置（自动设置 `config.xml` ），重启 Jenkins，登录验证\n\n![恢复 Jenkins 配置](https://cdn.myshenle.top/images/202305251045781.png)\n\n# 参考\n\n* [Jenkins 官方](https://www.jenkins-zh.cn/tutorial/management/auth/lost-password/)\n* [Jenkins之忘记管理员账户密码重置方法](https://blog.csdn.net/carefree2005/article/details/112169302)\n","slug":"Jenkins-Jenkins-重置管理员密码","published":1,"updated":"2023-05-25T04:36:41.180Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9lbaia000pcgg0ayiph8bj","content":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><p>Jenkins admin 用户忘记密码，需要重置密码</p>\n<h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><h2 id=\"1-修改配置文件\"><a href=\"#1-修改配置文件\" class=\"headerlink\" title=\"1. 修改配置文件\"></a>1. 修改配置文件</h2><p>修改 Jenkins 目录的 <code>config.xml</code>文件，通常在 <code>~/.jenkins/config.xml</code></p>\n<p>修改 <code>useSecurity</code> 字段为 <code>false</code>，然后重新启动 Jenkins。你就会发现不需要登陆也能进入管理页面。</p>\n<p>重启 Jenkins</p>\n<h2 id=\"2-修改-Jenkins-配置\"><a href=\"#2-修改-Jenkins-配置\" class=\"headerlink\" title=\"2. 修改 Jenkins 配置\"></a>2. 修改 Jenkins 配置</h2><p>直接进入 Jenkins 后台 -&gt; 系统管理 -&gt; 全局安全配置</p>\n<p>此操作可出现 <code>管理用户</code> 模块</p>\n<p><img src=\"https://cdn.myshenle.top/images/202305251012933.png\" alt=\"全局安全配置\"></p>\n<h2 id=\"3-修改密码\"><a href=\"#3-修改密码\" class=\"headerlink\" title=\"3. 修改密码\"></a>3. 修改密码</h2><p>直接进入 Jenkins 后台 -&gt; 系统管理 -&gt; 管理用户</p>\n<p><img src=\"https://cdn.myshenle.top/images/202305251021368.png\" alt=\"重置用户密码\"></p>\n<p>恢复 <code>Jenkins</code> 配置（自动设置 <code>config.xml</code> ），重启 Jenkins，登录验证</p>\n<p><img src=\"https://cdn.myshenle.top/images/202305251045781.png\" alt=\"恢复 Jenkins 配置\"></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://www.jenkins-zh.cn/tutorial/management/auth/lost-password/\">Jenkins 官方</a></li>\n<li><a href=\"https://blog.csdn.net/carefree2005/article/details/112169302\">Jenkins之忘记管理员账户密码重置方法</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><p>Jenkins admin 用户忘记密码，需要重置密码</p>\n<h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><h2 id=\"1-修改配置文件\"><a href=\"#1-修改配置文件\" class=\"headerlink\" title=\"1. 修改配置文件\"></a>1. 修改配置文件</h2><p>修改 Jenkins 目录的 <code>config.xml</code>文件，通常在 <code>~/.jenkins/config.xml</code></p>\n<p>修改 <code>useSecurity</code> 字段为 <code>false</code>，然后重新启动 Jenkins。你就会发现不需要登陆也能进入管理页面。</p>\n<p>重启 Jenkins</p>\n<h2 id=\"2-修改-Jenkins-配置\"><a href=\"#2-修改-Jenkins-配置\" class=\"headerlink\" title=\"2. 修改 Jenkins 配置\"></a>2. 修改 Jenkins 配置</h2><p>直接进入 Jenkins 后台 -&gt; 系统管理 -&gt; 全局安全配置</p>\n<p>此操作可出现 <code>管理用户</code> 模块</p>\n<p><img src=\"https://cdn.myshenle.top/images/202305251012933.png\" alt=\"全局安全配置\"></p>\n<h2 id=\"3-修改密码\"><a href=\"#3-修改密码\" class=\"headerlink\" title=\"3. 修改密码\"></a>3. 修改密码</h2><p>直接进入 Jenkins 后台 -&gt; 系统管理 -&gt; 管理用户</p>\n<p><img src=\"https://cdn.myshenle.top/images/202305251021368.png\" alt=\"重置用户密码\"></p>\n<p>恢复 <code>Jenkins</code> 配置（自动设置 <code>config.xml</code> ），重启 Jenkins，登录验证</p>\n<p><img src=\"https://cdn.myshenle.top/images/202305251045781.png\" alt=\"恢复 Jenkins 配置\"></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://www.jenkins-zh.cn/tutorial/management/auth/lost-password/\">Jenkins 官方</a></li>\n<li><a href=\"https://blog.csdn.net/carefree2005/article/details/112169302\">Jenkins之忘记管理员账户密码重置方法</a></li>\n</ul>\n"},{"title":"Ubuntu-换源","date":"2023-05-29T17:35:41.000Z","_content":"\n# 需求\n\n下载慢\n\n# 步骤\n\n1. 备份源文件\n\n   ```bash\n   $ sudo cp /etc/apt/sources.list /etc/apt/sources_copy.list\n   ```\n\n2. 修改源\n\n   ```bash\n   $ sudo vi /etc/apt/sources.list\n   ```\n\n   参考：[清华源自助替换](https://mirror.tuna.tsinghua.edu.cn/help/ubuntu/)。注意：版本要对应，查看版本：`lsb_release -a`\n\n3. 更新索引\n\n   ```bash\n   $ sudo apt update\n   ```\n\n# 参考\n\n* [ubuntu换源](https://blog.csdn.net/qq_45878098/article/details/126037838)\n\n","source":"_posts/Linux/Ubuntu-换源.md","raw":"---\ntitle: Ubuntu-换源\ncategories:\n  - 系统\n  - Linux\ntags:\n  - Ubuntu\ndate: 2023-05-30 01:35:41\n---\n\n# 需求\n\n下载慢\n\n# 步骤\n\n1. 备份源文件\n\n   ```bash\n   $ sudo cp /etc/apt/sources.list /etc/apt/sources_copy.list\n   ```\n\n2. 修改源\n\n   ```bash\n   $ sudo vi /etc/apt/sources.list\n   ```\n\n   参考：[清华源自助替换](https://mirror.tuna.tsinghua.edu.cn/help/ubuntu/)。注意：版本要对应，查看版本：`lsb_release -a`\n\n3. 更新索引\n\n   ```bash\n   $ sudo apt update\n   ```\n\n# 参考\n\n* [ubuntu换源](https://blog.csdn.net/qq_45878098/article/details/126037838)\n\n","slug":"Linux-Ubuntu-换源","published":1,"updated":"2023-05-29T17:47:24.478Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9lbaib000rcgg088yj4iv0","content":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><p>下载慢</p>\n<h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><ol>\n<li><p>备份源文件</p>\n<pre><code class=\"bash\">$ sudo cp /etc/apt/sources.list /etc/apt/sources_copy.list\n</code></pre>\n</li>\n<li><p>修改源</p>\n<pre><code class=\"bash\">$ sudo vi /etc/apt/sources.list\n</code></pre>\n<p>参考：<a href=\"https://mirror.tuna.tsinghua.edu.cn/help/ubuntu/\">清华源自助替换</a>。注意：版本要对应，查看版本：<code>lsb_release -a</code></p>\n</li>\n<li><p>更新索引</p>\n<pre><code class=\"bash\">$ sudo apt update\n</code></pre>\n</li>\n</ol>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://blog.csdn.net/qq_45878098/article/details/126037838\">ubuntu换源</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><p>下载慢</p>\n<h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><ol>\n<li><p>备份源文件</p>\n<pre><code class=\"bash\">$ sudo cp /etc/apt/sources.list /etc/apt/sources_copy.list\n</code></pre>\n</li>\n<li><p>修改源</p>\n<pre><code class=\"bash\">$ sudo vi /etc/apt/sources.list\n</code></pre>\n<p>参考：<a href=\"https://mirror.tuna.tsinghua.edu.cn/help/ubuntu/\">清华源自助替换</a>。注意：版本要对应，查看版本：<code>lsb_release -a</code></p>\n</li>\n<li><p>更新索引</p>\n<pre><code class=\"bash\">$ sudo apt update\n</code></pre>\n</li>\n</ol>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://blog.csdn.net/qq_45878098/article/details/126037838\">ubuntu换源</a></li>\n</ul>\n"},{"title":"Ubuntu-离线安装包","date":"2023-05-29T17:36:50.000Z","_content":"\n# 需求\n\n离线情况下无法使用 apt install 安装包\n\n# 步骤\n\n新建一个文件夹，专门保存下载的软件包\n\n```bash\n$ mkdir test\n$ cd test\n```\n\n下载离线包，packagename 换成要下载包名\n\n```bash\n$ sudo apt-get download $(apt-cache depends --recurse --no-recommends --no-suggests --no-conflicts --no-breaks --no-replaces --no-enhances <packagename> | grep \"^\\w\" | sort -u)\n```\n\n修改权限，建立依赖关系\n\n```bash\n$ mkdir ./archives\n$ dpkg-scanpackages ./ /dev/null | gzip > ./archives/Packages.gz -r\n$ sudo chmod 777 -R ./\n```\n\n如果出现错误：sudo:dpkg-scanpackages: command not found，则需要安装dpkg-dev工具\n\n```bash\n$ sudo apt-get install dpkg-dev\n```\n\n将打包后的文件拷贝到离线服务器上并解压，比如我们放到 root 目录下\n\n```bash\n$ tar -zxvf test.tar.gz\n$ cd test/archives\n$ gzip -d Packages\n```\n\n修改源\n\n```bash\n$ mv /etc/apt/sources.list /etc/apt/sources.list.bak\n$ echo \"deb [trusted=yes] file:///root/test/ archives/\" > /etc/apt/sources.list\n```\n\n更新源\n\n```bash\n$ sudo apt-get update\n```\n\n安装软件包\n\n```bash\n$ sudo apt-get install <packagename>\n```\n\n如果提示依赖问题，可以使用下边的命令修复\n\n```bash\n$ sudo apt-get install -f\n```\n\n# 参考\n\n* [Linux之ubuntu离线安装软件包](https://blog.csdn.net/zong596568821xp/article/details/105994450)\n","source":"_posts/Linux/Ubuntu-离线安装包.md","raw":"---\ntitle: Ubuntu-离线安装包\ncategories:\n  - 系统\n  - Linux\ntags:\n  - Ubuntu\ndate: 2023-05-30 01:36:50\n---\n\n# 需求\n\n离线情况下无法使用 apt install 安装包\n\n# 步骤\n\n新建一个文件夹，专门保存下载的软件包\n\n```bash\n$ mkdir test\n$ cd test\n```\n\n下载离线包，packagename 换成要下载包名\n\n```bash\n$ sudo apt-get download $(apt-cache depends --recurse --no-recommends --no-suggests --no-conflicts --no-breaks --no-replaces --no-enhances <packagename> | grep \"^\\w\" | sort -u)\n```\n\n修改权限，建立依赖关系\n\n```bash\n$ mkdir ./archives\n$ dpkg-scanpackages ./ /dev/null | gzip > ./archives/Packages.gz -r\n$ sudo chmod 777 -R ./\n```\n\n如果出现错误：sudo:dpkg-scanpackages: command not found，则需要安装dpkg-dev工具\n\n```bash\n$ sudo apt-get install dpkg-dev\n```\n\n将打包后的文件拷贝到离线服务器上并解压，比如我们放到 root 目录下\n\n```bash\n$ tar -zxvf test.tar.gz\n$ cd test/archives\n$ gzip -d Packages\n```\n\n修改源\n\n```bash\n$ mv /etc/apt/sources.list /etc/apt/sources.list.bak\n$ echo \"deb [trusted=yes] file:///root/test/ archives/\" > /etc/apt/sources.list\n```\n\n更新源\n\n```bash\n$ sudo apt-get update\n```\n\n安装软件包\n\n```bash\n$ sudo apt-get install <packagename>\n```\n\n如果提示依赖问题，可以使用下边的命令修复\n\n```bash\n$ sudo apt-get install -f\n```\n\n# 参考\n\n* [Linux之ubuntu离线安装软件包](https://blog.csdn.net/zong596568821xp/article/details/105994450)\n","slug":"Linux-Ubuntu-离线安装包","published":1,"updated":"2023-05-29T17:57:25.198Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9lbaic000ucgg07906gjwf","content":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><p>离线情况下无法使用 apt install 安装包</p>\n<h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><p>新建一个文件夹，专门保存下载的软件包</p>\n<pre><code class=\"bash\">$ mkdir test\n$ cd test\n</code></pre>\n<p>下载离线包，packagename 换成要下载包名</p>\n<pre><code class=\"bash\">$ sudo apt-get download $(apt-cache depends --recurse --no-recommends --no-suggests --no-conflicts --no-breaks --no-replaces --no-enhances &lt;packagename&gt; | grep &quot;^\\w&quot; | sort -u)\n</code></pre>\n<p>修改权限，建立依赖关系</p>\n<pre><code class=\"bash\">$ mkdir ./archives\n$ dpkg-scanpackages ./ /dev/null | gzip &gt; ./archives/Packages.gz -r\n$ sudo chmod 777 -R ./\n</code></pre>\n<p>如果出现错误：sudo:dpkg-scanpackages: command not found，则需要安装dpkg-dev工具</p>\n<pre><code class=\"bash\">$ sudo apt-get install dpkg-dev\n</code></pre>\n<p>将打包后的文件拷贝到离线服务器上并解压，比如我们放到 root 目录下</p>\n<pre><code class=\"bash\">$ tar -zxvf test.tar.gz\n$ cd test/archives\n$ gzip -d Packages\n</code></pre>\n<p>修改源</p>\n<pre><code class=\"bash\">$ mv /etc/apt/sources.list /etc/apt/sources.list.bak\n$ echo &quot;deb [trusted=yes] file:///root/test/ archives/&quot; &gt; /etc/apt/sources.list\n</code></pre>\n<p>更新源</p>\n<pre><code class=\"bash\">$ sudo apt-get update\n</code></pre>\n<p>安装软件包</p>\n<pre><code class=\"bash\">$ sudo apt-get install &lt;packagename&gt;\n</code></pre>\n<p>如果提示依赖问题，可以使用下边的命令修复</p>\n<pre><code class=\"bash\">$ sudo apt-get install -f\n</code></pre>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://blog.csdn.net/zong596568821xp/article/details/105994450\">Linux之ubuntu离线安装软件包</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><p>离线情况下无法使用 apt install 安装包</p>\n<h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><p>新建一个文件夹，专门保存下载的软件包</p>\n<pre><code class=\"bash\">$ mkdir test\n$ cd test\n</code></pre>\n<p>下载离线包，packagename 换成要下载包名</p>\n<pre><code class=\"bash\">$ sudo apt-get download $(apt-cache depends --recurse --no-recommends --no-suggests --no-conflicts --no-breaks --no-replaces --no-enhances &lt;packagename&gt; | grep &quot;^\\w&quot; | sort -u)\n</code></pre>\n<p>修改权限，建立依赖关系</p>\n<pre><code class=\"bash\">$ mkdir ./archives\n$ dpkg-scanpackages ./ /dev/null | gzip &gt; ./archives/Packages.gz -r\n$ sudo chmod 777 -R ./\n</code></pre>\n<p>如果出现错误：sudo:dpkg-scanpackages: command not found，则需要安装dpkg-dev工具</p>\n<pre><code class=\"bash\">$ sudo apt-get install dpkg-dev\n</code></pre>\n<p>将打包后的文件拷贝到离线服务器上并解压，比如我们放到 root 目录下</p>\n<pre><code class=\"bash\">$ tar -zxvf test.tar.gz\n$ cd test/archives\n$ gzip -d Packages\n</code></pre>\n<p>修改源</p>\n<pre><code class=\"bash\">$ mv /etc/apt/sources.list /etc/apt/sources.list.bak\n$ echo &quot;deb [trusted=yes] file:///root/test/ archives/&quot; &gt; /etc/apt/sources.list\n</code></pre>\n<p>更新源</p>\n<pre><code class=\"bash\">$ sudo apt-get update\n</code></pre>\n<p>安装软件包</p>\n<pre><code class=\"bash\">$ sudo apt-get install &lt;packagename&gt;\n</code></pre>\n<p>如果提示依赖问题，可以使用下边的命令修复</p>\n<pre><code class=\"bash\">$ sudo apt-get install -f\n</code></pre>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://blog.csdn.net/zong596568821xp/article/details/105994450\">Linux之ubuntu离线安装软件包</a></li>\n</ul>\n"},{"title":"VSCode-设置","date":"2023-05-25T04:35:41.000Z","_content":"\n# 快捷打开目录\n\n![安装命令](https://cdn.myshenle.top/images/202305262206759.png)\n\n使用：命令行输入 `code 需要打开的目录` ，即可快速通过 VSCode 打开目录\n","source":"_posts/VSCode/VSCode-设置.md","raw":"---\ntitle: VSCode-设置\ncategories:\n  - 工具\n  - VSCode\ntags:\n  - VSCode\ndate: 2023-05-25 12:35:41\n---\n\n# 快捷打开目录\n\n![安装命令](https://cdn.myshenle.top/images/202305262206759.png)\n\n使用：命令行输入 `code 需要打开的目录` ，即可快速通过 VSCode 打开目录\n","slug":"VSCode-VSCode-设置","published":1,"updated":"2023-05-27T14:56:17.547Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9lbaid000wcgg0950wab8z","content":"<h1 id=\"快捷打开目录\"><a href=\"#快捷打开目录\" class=\"headerlink\" title=\"快捷打开目录\"></a>快捷打开目录</h1><p><img src=\"https://cdn.myshenle.top/images/202305262206759.png\" alt=\"安装命令\"></p>\n<p>使用：命令行输入 <code>code 需要打开的目录</code> ，即可快速通过 VSCode 打开目录</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"快捷打开目录\"><a href=\"#快捷打开目录\" class=\"headerlink\" title=\"快捷打开目录\"></a>快捷打开目录</h1><p><img src=\"https://cdn.myshenle.top/images/202305262206759.png\" alt=\"安装命令\"></p>\n<p>使用：命令行输入 <code>code 需要打开的目录</code> ，即可快速通过 VSCode 打开目录</p>\n"},{"title":"散落的知识如何归化","top":1,"date":"2023-05-25T03:27:57.000Z","_content":"\n# 知识分类\n\n* 思维导图：快速查阅\n* 文章：仔细查阅\n* 卡片：永久记忆\n\n# 动力\n\n* 巧妇难为无米之炊，有好用的工具才有动力\n* 零落知识整理的快感，所有东西尽收自己手下，整整齐齐\n\n# 应用\n\n## 思维导图\n\n* 幕布：全平台同步，速度快\n* XMind：编辑丰富，速度慢\n\n## 文章\n\n好看，易用，安全，方便\n\n* Typora：全平台 markdown 编辑器\n* PicGo：图床工具\n* 七牛云：免费外链，免费的10G/月下载流量\n* 阿里云：域名\n* Hexo：博客系统\n* Github：文章空间、文章备份\n\n## 卡片\n\n* 年轮：丰富的富文本编辑卡片，Mac 生态\n* Anki：自定义卡片，全平台\n\n## 同步\n\n* 坚果云：全平台同步\n* OneDrive：全平台同步\n* iCloud：Mac 生态\n\n","source":"_posts/思考/散落的知识如何归化.md","raw":"---\ntitle: 散落的知识如何归化\ncategories:\n  - 思考\ntop: 1\ntags:\n  - 思考\ndate: 2023-05-25 11:27:57\n---\n\n# 知识分类\n\n* 思维导图：快速查阅\n* 文章：仔细查阅\n* 卡片：永久记忆\n\n# 动力\n\n* 巧妇难为无米之炊，有好用的工具才有动力\n* 零落知识整理的快感，所有东西尽收自己手下，整整齐齐\n\n# 应用\n\n## 思维导图\n\n* 幕布：全平台同步，速度快\n* XMind：编辑丰富，速度慢\n\n## 文章\n\n好看，易用，安全，方便\n\n* Typora：全平台 markdown 编辑器\n* PicGo：图床工具\n* 七牛云：免费外链，免费的10G/月下载流量\n* 阿里云：域名\n* Hexo：博客系统\n* Github：文章空间、文章备份\n\n## 卡片\n\n* 年轮：丰富的富文本编辑卡片，Mac 生态\n* Anki：自定义卡片，全平台\n\n## 同步\n\n* 坚果云：全平台同步\n* OneDrive：全平台同步\n* iCloud：Mac 生态\n\n","slug":"思考-散落的知识如何归化","published":1,"updated":"2023-05-25T08:12:57.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9lbaie0010cgg06wcl60dt","content":"<h1 id=\"知识分类\"><a href=\"#知识分类\" class=\"headerlink\" title=\"知识分类\"></a>知识分类</h1><ul>\n<li>思维导图：快速查阅</li>\n<li>文章：仔细查阅</li>\n<li>卡片：永久记忆</li>\n</ul>\n<h1 id=\"动力\"><a href=\"#动力\" class=\"headerlink\" title=\"动力\"></a>动力</h1><ul>\n<li>巧妇难为无米之炊，有好用的工具才有动力</li>\n<li>零落知识整理的快感，所有东西尽收自己手下，整整齐齐</li>\n</ul>\n<h1 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h1><h2 id=\"思维导图\"><a href=\"#思维导图\" class=\"headerlink\" title=\"思维导图\"></a>思维导图</h2><ul>\n<li>幕布：全平台同步，速度快</li>\n<li>XMind：编辑丰富，速度慢</li>\n</ul>\n<h2 id=\"文章\"><a href=\"#文章\" class=\"headerlink\" title=\"文章\"></a>文章</h2><p>好看，易用，安全，方便</p>\n<ul>\n<li>Typora：全平台 markdown 编辑器</li>\n<li>PicGo：图床工具</li>\n<li>七牛云：免费外链，免费的10G&#x2F;月下载流量</li>\n<li>阿里云：域名</li>\n<li>Hexo：博客系统</li>\n<li>Github：文章空间、文章备份</li>\n</ul>\n<h2 id=\"卡片\"><a href=\"#卡片\" class=\"headerlink\" title=\"卡片\"></a>卡片</h2><ul>\n<li>年轮：丰富的富文本编辑卡片，Mac 生态</li>\n<li>Anki：自定义卡片，全平台</li>\n</ul>\n<h2 id=\"同步\"><a href=\"#同步\" class=\"headerlink\" title=\"同步\"></a>同步</h2><ul>\n<li>坚果云：全平台同步</li>\n<li>OneDrive：全平台同步</li>\n<li>iCloud：Mac 生态</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"知识分类\"><a href=\"#知识分类\" class=\"headerlink\" title=\"知识分类\"></a>知识分类</h1><ul>\n<li>思维导图：快速查阅</li>\n<li>文章：仔细查阅</li>\n<li>卡片：永久记忆</li>\n</ul>\n<h1 id=\"动力\"><a href=\"#动力\" class=\"headerlink\" title=\"动力\"></a>动力</h1><ul>\n<li>巧妇难为无米之炊，有好用的工具才有动力</li>\n<li>零落知识整理的快感，所有东西尽收自己手下，整整齐齐</li>\n</ul>\n<h1 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h1><h2 id=\"思维导图\"><a href=\"#思维导图\" class=\"headerlink\" title=\"思维导图\"></a>思维导图</h2><ul>\n<li>幕布：全平台同步，速度快</li>\n<li>XMind：编辑丰富，速度慢</li>\n</ul>\n<h2 id=\"文章\"><a href=\"#文章\" class=\"headerlink\" title=\"文章\"></a>文章</h2><p>好看，易用，安全，方便</p>\n<ul>\n<li>Typora：全平台 markdown 编辑器</li>\n<li>PicGo：图床工具</li>\n<li>七牛云：免费外链，免费的10G&#x2F;月下载流量</li>\n<li>阿里云：域名</li>\n<li>Hexo：博客系统</li>\n<li>Github：文章空间、文章备份</li>\n</ul>\n<h2 id=\"卡片\"><a href=\"#卡片\" class=\"headerlink\" title=\"卡片\"></a>卡片</h2><ul>\n<li>年轮：丰富的富文本编辑卡片，Mac 生态</li>\n<li>Anki：自定义卡片，全平台</li>\n</ul>\n<h2 id=\"同步\"><a href=\"#同步\" class=\"headerlink\" title=\"同步\"></a>同步</h2><ul>\n<li>坚果云：全平台同步</li>\n<li>OneDrive：全平台同步</li>\n<li>iCloud：Mac 生态</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cli9lbahu0001cgg0gqv14y7s","category_id":"cli9lbahy0003cgg0at2ngirc","_id":"cli9lbaid000ycgg08739fk6a"},{"post_id":"cli9lbahu0001cgg0gqv14y7s","category_id":"cli9lbaia000ncgg0e0f7amx4","_id":"cli9lbaie0011cgg059971e7b"},{"post_id":"cli9lbahx0002cgg0bnfq2aw6","category_id":"cli9lbahy0003cgg0at2ngirc","_id":"cli9lbaig001acgg014sl3az2"},{"post_id":"cli9lbahx0002cgg0bnfq2aw6","category_id":"cli9lbaia000ncgg0e0f7amx4","_id":"cli9lbaig001ccgg0c5fd7fxn"},{"post_id":"cli9lbai7000gcgg05y84764e","category_id":"cli9lbai6000dcgg07lu7646e","_id":"cli9lbaih001hcgg03467b5gj"},{"post_id":"cli9lbai7000gcgg05y84764e","category_id":"cli9lbaig0019cgg06llw2gu6","_id":"cli9lbaii001kcgg0cmjmeugq"},{"post_id":"cli9lbai10005cgg07w5vgymf","category_id":"cli9lbai6000dcgg07lu7646e","_id":"cli9lbaii001mcgg0bm8wglkk"},{"post_id":"cli9lbai10005cgg07w5vgymf","category_id":"cli9lbaig001ecgg04t14610z","_id":"cli9lbaij001pcgg05dbn25dr"},{"post_id":"cli9lbai7000hcgg0f9260pzw","category_id":"cli9lbai6000dcgg07lu7646e","_id":"cli9lbaij001scgg0g5ka4p47"},{"post_id":"cli9lbai7000hcgg0f9260pzw","category_id":"cli9lbaii001icgg08jqn77pu","_id":"cli9lbaik001ucgg0gmnv3zmk"},{"post_id":"cli9lbai8000kcgg010ludg4w","category_id":"cli9lbai6000dcgg07lu7646e","_id":"cli9lbaik001wcgg0hdecbfpv"},{"post_id":"cli9lbai8000kcgg010ludg4w","category_id":"cli9lbaii001icgg08jqn77pu","_id":"cli9lbaik001zcgg0cthd6su9"},{"post_id":"cli9lbai20006cgg0127c97np","category_id":"cli9lbai6000dcgg07lu7646e","_id":"cli9lbail0022cgg0c18fg0uy"},{"post_id":"cli9lbai20006cgg0127c97np","category_id":"cli9lbaij001rcgg08lcg9u9j","_id":"cli9lbail0024cgg04ilh82vv"},{"post_id":"cli9lbai9000mcgg05ogn5re6","category_id":"cli9lbai6000dcgg07lu7646e","_id":"cli9lbail0027cgg07kqchcb6"},{"post_id":"cli9lbai9000mcgg05ogn5re6","category_id":"cli9lbaii001icgg08jqn77pu","_id":"cli9lbaim0028cgg05kmd13lm"},{"post_id":"cli9lbaia000pcgg0ayiph8bj","category_id":"cli9lbai6000dcgg07lu7646e","_id":"cli9lbaim002acgg0bhesc3n8"},{"post_id":"cli9lbaia000pcgg0ayiph8bj","category_id":"cli9lbaii001icgg08jqn77pu","_id":"cli9lbaim002ccgg01h4l103f"},{"post_id":"cli9lbai30007cgg01pkmft3u","category_id":"cli9lbai6000dcgg07lu7646e","_id":"cli9lbain002fcgg00lq8fsiq"},{"post_id":"cli9lbai30007cgg01pkmft3u","category_id":"cli9lbaig0019cgg06llw2gu6","_id":"cli9lbain002hcgg0dt5y6ami"},{"post_id":"cli9lbaid000wcgg0950wab8z","category_id":"cli9lbai6000dcgg07lu7646e","_id":"cli9lbain002icgg03vgo4nau"},{"post_id":"cli9lbaid000wcgg0950wab8z","category_id":"cli9lbain002ecgg01w2n6pah","_id":"cli9lbain002kcgg0bhmr11r1"},{"post_id":"cli9lbaie0010cgg06wcl60dt","category_id":"cli9lbain002gcgg06ndq8k91","_id":"cli9lbaio002mcgg0gnbn7mqd"},{"post_id":"cli9lbai5000bcgg01ke32pzl","category_id":"cli9lbai6000dcgg07lu7646e","_id":"cli9lbaio002ocgg09hyk76mw"},{"post_id":"cli9lbai5000bcgg01ke32pzl","category_id":"cli9lbaig0019cgg06llw2gu6","_id":"cli9lbaio002pcgg04ph72b6v"},{"post_id":"cli9lbai6000ccgg0cjwacadi","category_id":"cli9lbai6000dcgg07lu7646e","_id":"cli9lbaio002qcgg0gm01dn5y"},{"post_id":"cli9lbai6000ccgg0cjwacadi","category_id":"cli9lbaig0019cgg06llw2gu6","_id":"cli9lbaip002scgg04c43g6n3"},{"post_id":"cli9lbaib000rcgg088yj4iv0","category_id":"cli9lbail0026cgg0gjoq3m1b","_id":"cli9lbaip002tcgg0e39i5klu"},{"post_id":"cli9lbaib000rcgg088yj4iv0","category_id":"cli9lbaio002ncgg0bw5wbviu","_id":"cli9lbaip002ucgg024c654zo"},{"post_id":"cli9lbaic000ucgg07906gjwf","category_id":"cli9lbail0026cgg0gjoq3m1b","_id":"cli9lbaip002vcgg0eglubkn7"},{"post_id":"cli9lbaic000ucgg07906gjwf","category_id":"cli9lbaio002ncgg0bw5wbviu","_id":"cli9lbaip002wcgg08inn9cxz"}],"PostTag":[{"post_id":"cli9lbahu0001cgg0gqv14y7s","tag_id":"cli9lbai00004cgg02w13gdlx","_id":"cli9lbai5000acgg0eu1g46bn"},{"post_id":"cli9lbahx0002cgg0bnfq2aw6","tag_id":"cli9lbai00004cgg02w13gdlx","_id":"cli9lbai7000fcgg04bnf5osy"},{"post_id":"cli9lbai10005cgg07w5vgymf","tag_id":"cli9lbai6000ecgg01oc45cb6","_id":"cli9lbai9000lcgg0ezmc6yyn"},{"post_id":"cli9lbai20006cgg0127c97np","tag_id":"cli9lbai8000jcgg03fsedfa9","_id":"cli9lbaib000qcgg0dfvod2o0"},{"post_id":"cli9lbai30007cgg01pkmft3u","tag_id":"cli9lbaia000ocgg0fe673jx7","_id":"cli9lbaic000vcgg0b0jc3iqq"},{"post_id":"cli9lbai5000bcgg01ke32pzl","tag_id":"cli9lbaia000ocgg0fe673jx7","_id":"cli9lbaie0012cgg0h2vgbvdk"},{"post_id":"cli9lbai6000ccgg0cjwacadi","tag_id":"cli9lbaia000ocgg0fe673jx7","_id":"cli9lbaif0015cgg061t6ef1s"},{"post_id":"cli9lbai7000gcgg05y84764e","tag_id":"cli9lbaif0014cgg00upfdpx8","_id":"cli9lbaif0018cgg095s1gkr2"},{"post_id":"cli9lbai7000hcgg0f9260pzw","tag_id":"cli9lbaif0017cgg03cr24km9","_id":"cli9lbaig001dcgg085vubbcx"},{"post_id":"cli9lbai8000kcgg010ludg4w","tag_id":"cli9lbaif0017cgg03cr24km9","_id":"cli9lbaih001gcgg07hd2gjcb"},{"post_id":"cli9lbai9000mcgg05ogn5re6","tag_id":"cli9lbaif0017cgg03cr24km9","_id":"cli9lbaii001lcgg0b0sob2dy"},{"post_id":"cli9lbaia000pcgg0ayiph8bj","tag_id":"cli9lbaif0017cgg03cr24km9","_id":"cli9lbaij001qcgg05pq5g0si"},{"post_id":"cli9lbaib000rcgg088yj4iv0","tag_id":"cli9lbaij001ocgg0gfrm4aoa","_id":"cli9lbaik001vcgg0bajyhnzh"},{"post_id":"cli9lbaic000ucgg07906gjwf","tag_id":"cli9lbaij001ocgg0gfrm4aoa","_id":"cli9lbaik0020cgg05lokcpuk"},{"post_id":"cli9lbaid000wcgg0950wab8z","tag_id":"cli9lbaik001ycgg0btp1chco","_id":"cli9lbail0025cgg0fqry4g7g"},{"post_id":"cli9lbaie0010cgg06wcl60dt","tag_id":"cli9lbail0023cgg08v01eejs","_id":"cli9lbaim0029cgg0e4glejgn"}],"Tag":[{"name":"C","_id":"cli9lbai00004cgg02w13gdlx"},{"name":"Git","_id":"cli9lbai6000ecgg01oc45cb6"},{"name":"Gitlab","_id":"cli9lbai8000jcgg03fsedfa9"},{"name":"hexo","_id":"cli9lbaia000ocgg0fe673jx7"},{"name":"Hexo","_id":"cli9lbaif0014cgg00upfdpx8"},{"name":"Jenkins","_id":"cli9lbaif0017cgg03cr24km9"},{"name":"Ubuntu","_id":"cli9lbaij001ocgg0gfrm4aoa"},{"name":"VSCode","_id":"cli9lbaik001ycgg0btp1chco"},{"name":"思考","_id":"cli9lbail0023cgg08v01eejs"}]}}